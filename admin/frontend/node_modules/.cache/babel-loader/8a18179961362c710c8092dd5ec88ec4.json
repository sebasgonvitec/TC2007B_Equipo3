{"ast":null,"code":"var __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { getAllDirectIndirectChildrenIds, areAllDirectChildrenChecked, getAllParents } from './utils/itemUtils';\nimport { getDirectParentId, getItemById } from './utils/itemIdUtils';\nimport { isArray, getNestedValue } from './utils/misc';\nimport { CHILDREN_FIELD } from './utils/consts';\n/**\n * A helper function which updates the check descriptor.\n *\n * @param event - The event that triggered the change.\n * @param check - The check descriptor that will be updated.\n * @param data - The TreeView items.\n * @param settings - The additional settings that configure the update of the check descriptor.\n * @param childrenField - The field that points to the dataItem sub items. Defaults to `items`.\n * The default behavior allows the selection of multiple items.\n * @returns - The updated copy of the input check descriptor.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    state = { check: [], items: tree };\n *    render() {\n *        return (\n *            <div>\n *                <TreeView\n *                    checkboxes={true} onCheckChange={this.onCheckChange}\n *                    data={processTreeViewItems(this.state.items, { check: this.state.check })}\n *                />\n *                <div style={{ marginTop: 5 }}>\n *                    <i>Press SPACE to check/uncheck the active item</i>\n *                    <div className=\"example-config\">\n *                        Checked Indices: {this.state.check.join(\",\")}\n *                    </div>\n *                </div>\n *            </div>\n *        );\n *    }\n *    onCheckChange = (event) => {\n *        this.setState({ check: handleTreeViewCheckChange(event, this.state.check, this.state.items) });\n *    }\n * }\n *\n * const tree = [ {\n *    text: 'Furniture', expanded: true, items: [\n *        { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' } ]\n * }, {\n *    text: 'Decor', expanded: true, items: [\n *        { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' } ]\n * } ];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nexport function handleTreeViewCheckChange(event, check, data, settings, childrenField) {\n  if (settings === void 0) {\n    settings = {};\n  }\n\n  if (!data || !data.length) {\n    return [];\n  }\n\n  var _a = parseOperation(check),\n      ids = _a.ids,\n      idField = _a.idField;\n\n  var itemId = idField ? getNestedValue(idField, event.item) : event.itemHierarchicalIndex;\n  var idIndex = ids.indexOf(itemId);\n  var itemJustChecked = idIndex === -1;\n  var subItemsField = childrenField || CHILDREN_FIELD;\n  var newIds;\n\n  if (settings.singleMode) {\n    newIds = itemJustChecked ? [itemId] : [];\n  } else {\n    newIds = ids.slice();\n    itemJustChecked ? newIds.push(itemId) : newIds.splice(idIndex, 1);\n\n    if (settings.checkChildren) {\n      checkChildren(event.item, event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds);\n    }\n\n    if (settings.checkParents) {\n      checkParents(event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds, data);\n    }\n  }\n\n  return isArray(check) ? newIds : Object.assign({}, check, {\n    ids: newIds\n  });\n}\n\nfunction parseOperation(operation) {\n  var ids;\n  var idField = undefined;\n\n  if (isArray(operation)) {\n    ids = operation;\n  } else {\n    ids = operation.ids || [];\n    idField = operation.idField;\n  }\n\n  return {\n    ids: ids,\n    idField: idField\n  };\n}\n\nfunction checkChildren(item, itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids) {\n  getAllDirectIndirectChildrenIds(item, itemHierarchicalIndex, childrenField, idField).forEach(function (itemId) {\n    if (itemJustChecked && ids.indexOf(itemId) === -1) {\n      ids.push(itemId);\n    } else if (!itemJustChecked && ids.indexOf(itemId) > -1) {\n      ids.splice(ids.indexOf(itemId), 1);\n    }\n  });\n}\n\nfunction checkParents(itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids, data) {\n  var it = makeParentsIterator();\n  var result = it.next();\n  itemJustChecked ? check() : uncheck();\n\n  function check() {\n    // Check all parents which have all their children checked.\n    while (!result.done) {\n      var _a = result.value,\n          id = _a.id,\n          item = _a.item; // The first check is needed. However, it is not sure whether to stop the entire loop.\n\n      if (ids.indexOf(id) === -1 && areAllDirectChildrenChecked(item, id, idField, childrenField, ids)) {\n        ids.push(id);\n        result = it.next();\n      } else {\n        break;\n      }\n    }\n  }\n\n  function uncheck() {\n    // Uncheck parents until an already unchecked parent is reached.\n    while (!result.done) {\n      var id = result.value.id;\n      var idIndex = ids.indexOf(id);\n\n      if (idIndex > -1) {\n        ids.splice(idIndex, 1);\n        result = it.next();\n      } else {\n        break;\n      }\n    }\n  } // When called for unchecking, the parent items are not needed.\n  // That is why, for optimization, they are not returned.\n\n\n  function makeParentsIterator() {\n    var parents, i, parentId;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!idField) return [3\n          /*break*/\n          , 5];\n          parents = getAllParents(itemHierarchicalIndex, childrenField, data);\n          i = parents.length - 1;\n          _a.label = 1;\n\n        case 1:\n          if (!(i > -1)) return [3\n          /*break*/\n          , 4];\n          return [4\n          /*yield*/\n          , {\n            id: getNestedValue(idField, parents[i]),\n            item: itemJustChecked ? parents[i] : undefined\n          }];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          i--;\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          return [3\n          /*break*/\n          , 8];\n\n        case 5:\n          parentId = getDirectParentId(itemHierarchicalIndex);\n          _a.label = 6;\n\n        case 6:\n          if (!parentId) return [3\n          /*break*/\n          , 8];\n          return [4\n          /*yield*/\n          , {\n            id: parentId,\n            item: itemJustChecked ? getItemById(parentId, data, childrenField) : undefined\n          }];\n\n        case 7:\n          _a.sent();\n\n          parentId = getDirectParentId(parentId);\n          return [3\n          /*break*/\n          , 6];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  }\n}","map":{"version":3,"names":["__generator","thisArg","body","_","label","sent","t","trys","ops","f","y","g","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","done","value","pop","length","push","e","getAllDirectIndirectChildrenIds","areAllDirectChildrenChecked","getAllParents","getDirectParentId","getItemById","isArray","getNestedValue","CHILDREN_FIELD","handleTreeViewCheckChange","event","check","data","settings","childrenField","_a","parseOperation","ids","idField","itemId","item","itemHierarchicalIndex","idIndex","indexOf","itemJustChecked","subItemsField","newIds","singleMode","slice","splice","checkChildren","checkParents","Object","assign","operation","undefined","forEach","it","makeParentsIterator","result","uncheck","id","parents","i","parentId"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-react-treeview/dist/es/handleTreeViewCheckChange.js"],"sourcesContent":["var __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getAllDirectIndirectChildrenIds, areAllDirectChildrenChecked, getAllParents } from './utils/itemUtils';\nimport { getDirectParentId, getItemById } from './utils/itemIdUtils';\nimport { isArray, getNestedValue } from './utils/misc';\nimport { CHILDREN_FIELD } from './utils/consts';\n/**\n * A helper function which updates the check descriptor.\n *\n * @param event - The event that triggered the change.\n * @param check - The check descriptor that will be updated.\n * @param data - The TreeView items.\n * @param settings - The additional settings that configure the update of the check descriptor.\n * @param childrenField - The field that points to the dataItem sub items. Defaults to `items`.\n * The default behavior allows the selection of multiple items.\n * @returns - The updated copy of the input check descriptor.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    state = { check: [], items: tree };\n *    render() {\n *        return (\n *            <div>\n *                <TreeView\n *                    checkboxes={true} onCheckChange={this.onCheckChange}\n *                    data={processTreeViewItems(this.state.items, { check: this.state.check })}\n *                />\n *                <div style={{ marginTop: 5 }}>\n *                    <i>Press SPACE to check/uncheck the active item</i>\n *                    <div className=\"example-config\">\n *                        Checked Indices: {this.state.check.join(\",\")}\n *                    </div>\n *                </div>\n *            </div>\n *        );\n *    }\n *    onCheckChange = (event) => {\n *        this.setState({ check: handleTreeViewCheckChange(event, this.state.check, this.state.items) });\n *    }\n * }\n *\n * const tree = [ {\n *    text: 'Furniture', expanded: true, items: [\n *        { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' } ]\n * }, {\n *    text: 'Decor', expanded: true, items: [\n *        { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' } ]\n * } ];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport function handleTreeViewCheckChange(event, check, data, settings, childrenField) {\n    if (settings === void 0) { settings = {}; }\n    if (!data || !data.length) {\n        return [];\n    }\n    var _a = parseOperation(check), ids = _a.ids, idField = _a.idField;\n    var itemId = idField ? getNestedValue(idField, event.item) : event.itemHierarchicalIndex;\n    var idIndex = ids.indexOf(itemId);\n    var itemJustChecked = idIndex === -1;\n    var subItemsField = childrenField || CHILDREN_FIELD;\n    var newIds;\n    if (settings.singleMode) {\n        newIds = itemJustChecked ? [itemId] : [];\n    }\n    else {\n        newIds = ids.slice();\n        itemJustChecked ? newIds.push(itemId) : newIds.splice(idIndex, 1);\n        if (settings.checkChildren) {\n            checkChildren(event.item, event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds);\n        }\n        if (settings.checkParents) {\n            checkParents(event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds, data);\n        }\n    }\n    return isArray(check) ? newIds : Object.assign({}, check, { ids: newIds });\n}\nfunction parseOperation(operation) {\n    var ids;\n    var idField = undefined;\n    if (isArray(operation)) {\n        ids = operation;\n    }\n    else {\n        ids = operation.ids || [];\n        idField = operation.idField;\n    }\n    return { ids: ids, idField: idField };\n}\nfunction checkChildren(item, itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids) {\n    getAllDirectIndirectChildrenIds(item, itemHierarchicalIndex, childrenField, idField).forEach(function (itemId) {\n        if (itemJustChecked && ids.indexOf(itemId) === -1) {\n            ids.push(itemId);\n        }\n        else if (!itemJustChecked && ids.indexOf(itemId) > -1) {\n            ids.splice(ids.indexOf(itemId), 1);\n        }\n    });\n}\nfunction checkParents(itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids, data) {\n    var it = makeParentsIterator();\n    var result = it.next();\n    itemJustChecked ? check() : uncheck();\n    function check() {\n        // Check all parents which have all their children checked.\n        while (!result.done) {\n            var _a = result.value, id = _a.id, item = _a.item;\n            // The first check is needed. However, it is not sure whether to stop the entire loop.\n            if (ids.indexOf(id) === -1 &&\n                areAllDirectChildrenChecked(item, id, idField, childrenField, ids)) {\n                ids.push(id);\n                result = it.next();\n            }\n            else {\n                break;\n            }\n        }\n    }\n    function uncheck() {\n        // Uncheck parents until an already unchecked parent is reached.\n        while (!result.done) {\n            var id = result.value.id;\n            var idIndex = ids.indexOf(id);\n            if (idIndex > -1) {\n                ids.splice(idIndex, 1);\n                result = it.next();\n            }\n            else {\n                break;\n            }\n        }\n    }\n    // When called for unchecking, the parent items are not needed.\n    // That is why, for optimization, they are not returned.\n    function makeParentsIterator() {\n        var parents, i, parentId;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!idField) return [3 /*break*/, 5];\n                    parents = getAllParents(itemHierarchicalIndex, childrenField, data);\n                    i = parents.length - 1;\n                    _a.label = 1;\n                case 1:\n                    if (!(i > -1)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, { id: getNestedValue(idField, parents[i]), item: itemJustChecked ? parents[i] : undefined }];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    i--;\n                    return [3 /*break*/, 1];\n                case 4: return [3 /*break*/, 8];\n                case 5:\n                    parentId = getDirectParentId(itemHierarchicalIndex);\n                    _a.label = 6;\n                case 6:\n                    if (!parentId) return [3 /*break*/, 8];\n                    return [4 /*yield*/, { id: parentId, item: itemJustChecked ? getItemById(parentId, data, childrenField) : undefined }];\n                case 7:\n                    _a.sent();\n                    parentId = getDirectParentId(parentId);\n                    return [3 /*break*/, 6];\n                case 8: return [2 /*return*/];\n            }\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}