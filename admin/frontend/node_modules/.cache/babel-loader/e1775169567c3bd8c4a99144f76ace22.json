{"ast":null,"code":"import Group from './group';\nimport Size from '../geometry/size';\nimport Rect from '../geometry/rect';\nimport Point from '../geometry/point';\nimport createTransform from '../geometry/transform';\nimport translateToPoint from '../alignment/translate-to-point';\nimport alignStart from '../alignment/align-start';\nimport alignStartReverse from '../alignment/align-start-reverse';\nvar DEFAULT_OPTIONS = {\n  alignContent: \"start\",\n  justifyContent: \"start\",\n  alignItems: \"start\",\n  spacing: 0,\n  orientation: \"horizontal\",\n  lineSpacing: 0,\n  wrap: true,\n  revers: false\n};\n\nvar forEach = function (elements, callback) {\n  elements.forEach(callback);\n};\n\nvar forEachReverse = function (elements, callback) {\n  var length = elements.length;\n\n  for (var idx = length - 1; idx >= 0; idx--) {\n    callback(elements[idx], idx);\n  }\n};\n\nvar Layout = function (Group) {\n  function Layout(rect, options) {\n    Group.call(this, Object.assign({}, DEFAULT_OPTIONS, options));\n    this._rect = rect;\n    this._fieldMap = {};\n  }\n\n  if (Group) Layout.__proto__ = Group;\n  Layout.prototype = Object.create(Group && Group.prototype);\n  Layout.prototype.constructor = Layout;\n\n  Layout.prototype.rect = function rect(value) {\n    if (value) {\n      this._rect = value;\n      return this;\n    }\n\n    return this._rect;\n  };\n\n  Layout.prototype._initMap = function _initMap() {\n    var options = this.options;\n    var fieldMap = this._fieldMap;\n\n    if (options.orientation === \"horizontal\") {\n      fieldMap.sizeField = \"width\";\n      fieldMap.groupsSizeField = \"height\";\n      fieldMap.groupAxis = \"x\";\n      fieldMap.groupsAxis = \"y\";\n    } else {\n      fieldMap.sizeField = \"height\";\n      fieldMap.groupsSizeField = \"width\";\n      fieldMap.groupAxis = \"y\";\n      fieldMap.groupsAxis = \"x\";\n    }\n\n    if (options.reverse) {\n      this.forEach = forEachReverse;\n      this.justifyAlign = alignStartReverse;\n    } else {\n      this.forEach = forEach;\n      this.justifyAlign = alignStart;\n    }\n  };\n\n  Layout.prototype.reflow = function reflow() {\n    var this$1 = this;\n\n    if (!this._rect || this.children.length === 0) {\n      return;\n    }\n\n    this._initMap();\n\n    if (this.options.transform) {\n      this.transform(null);\n    }\n\n    var options = this.options;\n    var rect = this._rect;\n\n    var ref = this._initGroups();\n\n    var groups = ref.groups;\n    var groupsSize = ref.groupsSize;\n    var ref$1 = this._fieldMap;\n    var sizeField = ref$1.sizeField;\n    var groupsSizeField = ref$1.groupsSizeField;\n    var groupAxis = ref$1.groupAxis;\n    var groupsAxis = ref$1.groupsAxis;\n    var groupOrigin = new Point();\n    var elementOrigin = new Point();\n    var size = new Size();\n    var groupStart = alignStart(groupsSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n    var elementStart, group, groupBox;\n\n    var arrangeElements = function (bbox, idx) {\n      var element = group.elements[idx];\n      elementOrigin[groupAxis] = elementStart;\n      elementOrigin[groupsAxis] = alignStart(bbox.size[groupsSizeField], groupBox, options.alignItems, groupsAxis, groupsSizeField);\n      translateToPoint(elementOrigin, bbox, element);\n      elementStart += bbox.size[sizeField] + options.spacing;\n    };\n\n    for (var groupIdx = 0; groupIdx < groups.length; groupIdx++) {\n      group = groups[groupIdx];\n      groupOrigin[groupAxis] = elementStart = this$1.justifyAlign(group.size, rect, options.justifyContent, groupAxis, sizeField);\n      groupOrigin[groupsAxis] = groupStart;\n      size[sizeField] = group.size;\n      size[groupsSizeField] = group.lineSize;\n      groupBox = new Rect(groupOrigin, size);\n      this$1.forEach(group.bboxes, arrangeElements);\n      groupStart += group.lineSize + options.lineSpacing;\n    }\n\n    if (!options.wrap && group.size > rect.size[sizeField]) {\n      var scale = rect.size[sizeField] / groupBox.size[sizeField];\n      var scaledStart = groupBox.topLeft().scale(scale, scale);\n      var scaledSize = groupBox.size[groupsSizeField] * scale;\n      var newStart = alignStart(scaledSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n      var transform = createTransform();\n\n      if (groupAxis === \"x\") {\n        transform.translate(rect.origin.x - scaledStart.x, newStart - scaledStart.y);\n      } else {\n        transform.translate(newStart - scaledStart.x, rect.origin.y - scaledStart.y);\n      }\n\n      transform.scale(scale, scale);\n      this.transform(transform);\n    }\n  };\n\n  Layout.prototype._initGroups = function _initGroups() {\n    var this$1 = this;\n    var ref = this;\n    var options = ref.options;\n    var children = ref.children;\n    var lineSpacing = options.lineSpacing;\n    var wrap = options.wrap;\n    var spacing = options.spacing;\n    var sizeField = this._fieldMap.sizeField;\n\n    var group = this._newGroup();\n\n    var groups = [];\n\n    var addGroup = function () {\n      groups.push(group);\n      groupsSize += group.lineSize + lineSpacing;\n    };\n\n    var groupsSize = -lineSpacing;\n\n    for (var idx = 0; idx < children.length; idx++) {\n      var element = children[idx];\n      var bbox = children[idx].clippedBBox();\n\n      if (element.visible() && bbox) {\n        if (wrap && group.size + bbox.size[sizeField] + spacing > this$1._rect.size[sizeField]) {\n          if (group.bboxes.length === 0) {\n            this$1._addToGroup(group, bbox, element);\n\n            addGroup();\n            group = this$1._newGroup();\n          } else {\n            addGroup();\n            group = this$1._newGroup();\n\n            this$1._addToGroup(group, bbox, element);\n          }\n        } else {\n          this$1._addToGroup(group, bbox, element);\n        }\n      }\n    }\n\n    if (group.bboxes.length) {\n      addGroup();\n    }\n\n    return {\n      groups: groups,\n      groupsSize: groupsSize\n    };\n  };\n\n  Layout.prototype._addToGroup = function _addToGroup(group, bbox, element) {\n    group.size += bbox.size[this._fieldMap.sizeField] + this.options.spacing;\n    group.lineSize = Math.max(bbox.size[this._fieldMap.groupsSizeField], group.lineSize);\n    group.bboxes.push(bbox);\n    group.elements.push(element);\n  };\n\n  Layout.prototype._newGroup = function _newGroup() {\n    return {\n      lineSize: 0,\n      size: -this.options.spacing,\n      bboxes: [],\n      elements: []\n    };\n  };\n\n  return Layout;\n}(Group);\n\nexport default Layout;","map":{"version":3,"names":["Group","Size","Rect","Point","createTransform","translateToPoint","alignStart","alignStartReverse","DEFAULT_OPTIONS","alignContent","justifyContent","alignItems","spacing","orientation","lineSpacing","wrap","revers","forEach","elements","callback","forEachReverse","length","idx","Layout","rect","options","call","Object","assign","_rect","_fieldMap","__proto__","prototype","create","constructor","value","_initMap","fieldMap","sizeField","groupsSizeField","groupAxis","groupsAxis","reverse","justifyAlign","reflow","this$1","children","transform","ref","_initGroups","groups","groupsSize","ref$1","groupOrigin","elementOrigin","size","groupStart","elementStart","group","groupBox","arrangeElements","bbox","element","groupIdx","lineSize","bboxes","scale","scaledStart","topLeft","scaledSize","newStart","translate","origin","x","y","_newGroup","addGroup","push","clippedBBox","visible","_addToGroup","Math","max"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-drawing/dist/es/shapes/layout.js"],"sourcesContent":["import Group from './group';\nimport Size from '../geometry/size';\nimport Rect from '../geometry/rect';\nimport Point from '../geometry/point';\nimport createTransform from '../geometry/transform';\nimport translateToPoint from '../alignment/translate-to-point';\nimport alignStart from '../alignment/align-start';\nimport alignStartReverse from '../alignment/align-start-reverse';\n\nvar DEFAULT_OPTIONS = {\n    alignContent: \"start\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    spacing: 0,\n    orientation: \"horizontal\",\n    lineSpacing: 0,\n    wrap: true,\n    revers: false\n};\n\nvar forEach = function (elements, callback) {\n    elements.forEach(callback);\n};\n\nvar forEachReverse = function (elements, callback) {\n    var length = elements.length;\n\n    for (var idx = length - 1; idx >= 0; idx--) {\n        callback(elements[idx], idx);\n    }\n};\n\nvar Layout = (function (Group) {\n    function Layout(rect, options) {\n        Group.call(this, Object.assign({}, DEFAULT_OPTIONS, options));\n        this._rect = rect;\n        this._fieldMap = {};\n    }\n\n    if ( Group ) Layout.__proto__ = Group;\n    Layout.prototype = Object.create( Group && Group.prototype );\n    Layout.prototype.constructor = Layout;\n\n    Layout.prototype.rect = function rect (value) {\n        if (value) {\n            this._rect = value;\n            return this;\n        }\n\n        return this._rect;\n    };\n\n    Layout.prototype._initMap = function _initMap () {\n        var options = this.options;\n        var fieldMap = this._fieldMap;\n        if (options.orientation === \"horizontal\") {\n            fieldMap.sizeField = \"width\";\n            fieldMap.groupsSizeField = \"height\";\n            fieldMap.groupAxis = \"x\";\n            fieldMap.groupsAxis = \"y\";\n        } else {\n            fieldMap.sizeField = \"height\";\n            fieldMap.groupsSizeField = \"width\";\n            fieldMap.groupAxis = \"y\";\n            fieldMap.groupsAxis = \"x\";\n        }\n\n        if (options.reverse) {\n            this.forEach = forEachReverse;\n            this.justifyAlign = alignStartReverse;\n        } else {\n            this.forEach = forEach;\n            this.justifyAlign = alignStart;\n        }\n    };\n\n    Layout.prototype.reflow = function reflow () {\n        var this$1 = this;\n\n        if (!this._rect || this.children.length === 0) {\n            return;\n        }\n        this._initMap();\n\n        if (this.options.transform) {\n            this.transform(null);\n        }\n\n        var options = this.options;\n        var rect = this._rect;\n        var ref = this._initGroups();\n        var groups = ref.groups;\n        var groupsSize = ref.groupsSize;\n        var ref$1 = this._fieldMap;\n        var sizeField = ref$1.sizeField;\n        var groupsSizeField = ref$1.groupsSizeField;\n        var groupAxis = ref$1.groupAxis;\n        var groupsAxis = ref$1.groupsAxis;\n        var groupOrigin = new Point();\n        var elementOrigin = new Point();\n        var size = new Size();\n        var groupStart = alignStart(groupsSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n        var elementStart, group, groupBox;\n\n        var arrangeElements = function (bbox, idx) {\n            var element = group.elements[idx];\n\n            elementOrigin[groupAxis] = elementStart;\n            elementOrigin[groupsAxis] = alignStart(bbox.size[groupsSizeField], groupBox, options.alignItems, groupsAxis, groupsSizeField);\n            translateToPoint(elementOrigin, bbox, element);\n            elementStart += bbox.size[sizeField] + options.spacing;\n        };\n\n        for (var groupIdx = 0; groupIdx < groups.length; groupIdx++) {\n            group = groups[groupIdx];\n            groupOrigin[groupAxis] = elementStart = this$1.justifyAlign(group.size, rect, options.justifyContent, groupAxis, sizeField);\n            groupOrigin[groupsAxis] = groupStart;\n            size[sizeField] = group.size;\n            size[groupsSizeField] = group.lineSize;\n            groupBox = new Rect(groupOrigin, size);\n            this$1.forEach(group.bboxes, arrangeElements);\n\n            groupStart += group.lineSize + options.lineSpacing;\n        }\n\n        if (!options.wrap && group.size > rect.size[sizeField]) {\n            var scale = rect.size[sizeField] / groupBox.size[sizeField];\n            var scaledStart = groupBox.topLeft().scale(scale, scale);\n            var scaledSize = groupBox.size[groupsSizeField] * scale;\n            var newStart = alignStart(scaledSize, rect, options.alignContent, groupsAxis, groupsSizeField);\n            var transform = createTransform();\n            if (groupAxis === \"x\") {\n                transform.translate(rect.origin.x - scaledStart.x, newStart - scaledStart.y);\n            } else {\n                transform.translate(newStart - scaledStart.x, rect.origin.y - scaledStart.y);\n            }\n            transform.scale(scale, scale);\n\n            this.transform(transform);\n        }\n    };\n\n    Layout.prototype._initGroups = function _initGroups () {\n        var this$1 = this;\n\n        var ref = this;\n        var options = ref.options;\n        var children = ref.children;\n        var lineSpacing = options.lineSpacing;\n        var wrap = options.wrap;\n        var spacing = options.spacing;\n        var sizeField = this._fieldMap.sizeField;\n        var group = this._newGroup();\n        var groups = [];\n        var addGroup = function() {\n            groups.push(group);\n            groupsSize += group.lineSize + lineSpacing;\n        };\n        var groupsSize = -lineSpacing;\n\n        for (var idx = 0; idx < children.length; idx++) {\n            var element = children[idx];\n            var bbox = children[idx].clippedBBox();\n            if (element.visible() && bbox) {\n                if (wrap && group.size + bbox.size[sizeField] + spacing > this$1._rect.size[sizeField]) {\n                    if (group.bboxes.length === 0) {\n                        this$1._addToGroup(group, bbox, element);\n                        addGroup();\n                        group = this$1._newGroup();\n                    } else {\n                        addGroup();\n                        group = this$1._newGroup();\n                        this$1._addToGroup(group, bbox, element);\n                    }\n                } else {\n                    this$1._addToGroup(group, bbox, element);\n                }\n            }\n        }\n\n        if (group.bboxes.length) {\n            addGroup();\n        }\n\n        return {\n            groups: groups,\n            groupsSize: groupsSize\n        };\n    };\n\n    Layout.prototype._addToGroup = function _addToGroup (group, bbox, element) {\n        group.size += bbox.size[this._fieldMap.sizeField] + this.options.spacing;\n        group.lineSize = Math.max(bbox.size[this._fieldMap.groupsSizeField], group.lineSize);\n        group.bboxes.push(bbox);\n        group.elements.push(element);\n    };\n\n    Layout.prototype._newGroup = function _newGroup () {\n        return {\n            lineSize: 0,\n            size: -this.options.spacing,\n            bboxes: [],\n            elements: []\n        };\n    };\n\n    return Layout;\n}(Group));\n\nexport default Layout;"],"mappings":"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"},"metadata":{},"sourceType":"module"}