{"ast":null,"code":"import { cldr, getLocaleInfo } from './info';\nimport { errors } from '../errors';\nimport localeTerritory from './territory';\nimport parseRangeDate from './parse-range-date';\n/* eslint-disable consistent-return */\n\nvar NoCurrency = errors.NoCurrency;\nvar NoCurrencyDisplay = errors.NoCurrencyDisplay;\nvar NoSupplementalCurrency = errors.NoSupplementalCurrency;\nvar NoCurrencyRegion = errors.NoCurrencyRegion;\nvar NoValidCurrency = errors.NoValidCurrency;\nvar DEFAULT_CURRENCY_FRACTIONS = 2;\nvar SYMBOL = \"symbol\";\nvar INVALID_CURRENCY_CODE = 'XXX';\nvar GLOBAL_CURRENCIES = {\n  '001': 'USD',\n  // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error\n  '150': 'EUR' // 150 territory for Europe\n\n};\n\nfunction getCurrencyInfo(locale, currency, throwIfNoValid) {\n  var info = getLocaleInfo(locale);\n  var currencies = info.numbers.currencies;\n\n  if (!currencies) {\n    if (throwIfNoValid) {\n      throw NoCurrency.error();\n    }\n\n    return;\n  }\n\n  var currencyDisplayInfo = currencies[currency];\n\n  if (!currencyDisplayInfo) {\n    if (throwIfNoValid) {\n      throw NoCurrencyDisplay.error();\n    }\n\n    return;\n  }\n\n  return currencyDisplayInfo;\n}\n\nfunction lengthComparer(a, b) {\n  return b.length - a.length;\n}\n\nfunction regionCurrency(regionCurrencies) {\n  var latestValidUntil, latestValidUntilRange;\n  var latestStillValid, latestStillValidDate;\n\n  for (var idx = 0; idx < regionCurrencies.length; idx++) {\n    var currency = regionCurrencies[idx];\n    var code = Object.keys(currency)[0];\n    var info = currency[code];\n\n    if (code !== INVALID_CURRENCY_CODE && info._tender !== 'false' && info._from) {\n      if (!info._to) {\n        var stillValidDate = parseRangeDate(info._from);\n\n        if (!latestStillValidDate || latestStillValidDate < stillValidDate) {\n          latestStillValid = code;\n          latestStillValidDate = stillValidDate;\n        }\n      } else if (!latestStillValid) {\n        var validFrom = parseRangeDate(info._from);\n        var validTo = parseRangeDate(info._to);\n\n        if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {\n          latestValidUntil = code;\n          latestValidUntilRange = {\n            from: validFrom,\n            to: validTo\n          };\n        }\n      }\n    }\n  }\n\n  return latestStillValid || latestValidUntil;\n}\n\nexport function currencyDisplays(locale, currency, throwIfNoValid) {\n  if (throwIfNoValid === void 0) throwIfNoValid = true;\n  var currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);\n\n  if (!currencyInfo) {\n    return;\n  }\n\n  if (!currencyInfo.displays) {\n    var displays = [currency];\n\n    for (var field in currencyInfo) {\n      displays.push(currencyInfo[field]);\n    }\n\n    displays.sort(lengthComparer);\n    currencyInfo.displays = displays;\n  }\n\n  return currencyInfo.displays;\n}\nexport function currencyDisplay(locale, options) {\n  var value = options.value;\n  var currency = options.currency;\n  var currencyDisplay = options.currencyDisplay;\n  if (currencyDisplay === void 0) currencyDisplay = SYMBOL;\n\n  if (currencyDisplay === \"code\") {\n    return currency;\n  }\n\n  var currencyInfo = getCurrencyInfo(locale, currency, true);\n  var result;\n\n  if (currencyDisplay === SYMBOL) {\n    result = currencyInfo[\"symbol-alt-narrow\"] || currencyInfo[SYMBOL];\n  } else {\n    if (typeof value === \"undefined\" || value !== 1) {\n      result = currencyInfo[\"displayName-count-other\"];\n    } else {\n      result = currencyInfo[\"displayName-count-one\"];\n    }\n  }\n\n  return result;\n}\nexport function currencyFractionOptions(code) {\n  var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n  var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n  var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];\n\n  if (fractions && fractions._digits) {\n    maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);\n  }\n\n  return {\n    minimumFractionDigits: minimumFractionDigits,\n    maximumFractionDigits: maximumFractionDigits\n  };\n}\nexport function territoryCurrencyCode(territory, throwIfNoValid) {\n  if (throwIfNoValid === void 0) throwIfNoValid = true;\n\n  if (GLOBAL_CURRENCIES[territory]) {\n    return GLOBAL_CURRENCIES[territory];\n  }\n\n  var currencyData = cldr.supplemental.currencyData;\n\n  if (!currencyData) {\n    if (throwIfNoValid) {\n      throw NoSupplementalCurrency.error();\n    }\n\n    return;\n  }\n\n  var regionCurrencies = currencyData.region[territory];\n\n  if (!regionCurrencies) {\n    if (throwIfNoValid) {\n      throw NoCurrencyRegion.error(territory);\n    }\n\n    return;\n  }\n\n  var currencyCode = regionCurrency(regionCurrencies);\n  return currencyCode;\n}\nexport function localeCurrency(locale, throwIfNoValid) {\n  var info = getLocaleInfo(locale);\n  var numbers = info.numbers;\n\n  if (!numbers.localeCurrency) {\n    var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);\n\n    if (!currency && throwIfNoValid) {\n      throw NoValidCurrency.error(info.name);\n    }\n\n    numbers.localeCurrency = currency;\n  }\n\n  return numbers.localeCurrency;\n}","map":{"version":3,"names":["cldr","getLocaleInfo","errors","localeTerritory","parseRangeDate","NoCurrency","NoCurrencyDisplay","NoSupplementalCurrency","NoCurrencyRegion","NoValidCurrency","DEFAULT_CURRENCY_FRACTIONS","SYMBOL","INVALID_CURRENCY_CODE","GLOBAL_CURRENCIES","getCurrencyInfo","locale","currency","throwIfNoValid","info","currencies","numbers","error","currencyDisplayInfo","lengthComparer","a","b","length","regionCurrency","regionCurrencies","latestValidUntil","latestValidUntilRange","latestStillValid","latestStillValidDate","idx","code","Object","keys","_tender","_from","_to","stillValidDate","validFrom","validTo","to","from","currencyDisplays","currencyInfo","displays","field","push","sort","currencyDisplay","options","value","result","currencyFractionOptions","minimumFractionDigits","maximumFractionDigits","fractions","supplemental","currencyData","_digits","parseInt","territoryCurrencyCode","territory","region","currencyCode","localeCurrency","name"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-intl/dist/es/cldr/currency.js"],"sourcesContent":["import { cldr, getLocaleInfo } from './info';\nimport { errors } from '../errors';\nimport localeTerritory from './territory';\nimport parseRangeDate from './parse-range-date';\n\n/* eslint-disable consistent-return */\n\nvar NoCurrency = errors.NoCurrency;\nvar NoCurrencyDisplay = errors.NoCurrencyDisplay;\nvar NoSupplementalCurrency = errors.NoSupplementalCurrency;\nvar NoCurrencyRegion = errors.NoCurrencyRegion;\nvar NoValidCurrency = errors.NoValidCurrency;\n\nvar DEFAULT_CURRENCY_FRACTIONS = 2;\nvar SYMBOL = \"symbol\";\nvar INVALID_CURRENCY_CODE = 'XXX';\n\nvar GLOBAL_CURRENCIES = {\n    '001': 'USD', // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error\n    '150': 'EUR' // 150 territory for Europe\n\n};\n\nfunction getCurrencyInfo(locale, currency, throwIfNoValid) {\n    var info = getLocaleInfo(locale);\n    var currencies = info.numbers.currencies;\n    if (!currencies) {\n        if (throwIfNoValid) {\n            throw NoCurrency.error();\n        }\n\n        return;\n    }\n\n    var currencyDisplayInfo = currencies[currency];\n\n    if (!currencyDisplayInfo) {\n        if (throwIfNoValid) {\n            throw NoCurrencyDisplay.error();\n        }\n\n        return;\n    }\n\n    return currencyDisplayInfo;\n}\n\nfunction lengthComparer(a, b) {\n    return b.length - a.length;\n}\n\nfunction regionCurrency(regionCurrencies) {\n    var latestValidUntil, latestValidUntilRange;\n    var latestStillValid, latestStillValidDate;\n\n    for (var idx = 0; idx < regionCurrencies.length; idx++) {\n        var currency = regionCurrencies[idx];\n        var code = Object.keys(currency)[0];\n        var info = currency[code];\n        if (code !== INVALID_CURRENCY_CODE && info._tender !== 'false' && info._from) {\n            if (!info._to) {\n                var stillValidDate = parseRangeDate(info._from);\n                if (!latestStillValidDate || latestStillValidDate < stillValidDate) {\n                    latestStillValid = code;\n                    latestStillValidDate = stillValidDate;\n                }\n            } else if (!latestStillValid) {\n                var validFrom = parseRangeDate(info._from);\n                var validTo = parseRangeDate(info._to);\n                if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {\n                    latestValidUntil = code;\n                    latestValidUntilRange = {\n                        from: validFrom,\n                        to: validTo\n                    };\n                }\n            }\n        }\n    }\n\n    return latestStillValid || latestValidUntil;\n}\n\nexport function currencyDisplays(locale, currency, throwIfNoValid) {\n    if ( throwIfNoValid === void 0 ) throwIfNoValid = true;\n\n    var currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);\n    if (!currencyInfo) {\n        return;\n    }\n\n    if (!currencyInfo.displays) {\n        var displays = [ currency ];\n        for (var field in currencyInfo) {\n            displays.push(currencyInfo[field]);\n        }\n        displays.sort(lengthComparer);\n        currencyInfo.displays = displays;\n    }\n\n    return currencyInfo.displays;\n}\n\nexport function currencyDisplay(locale, options) {\n    var value = options.value;\n    var currency = options.currency;\n    var currencyDisplay = options.currencyDisplay; if ( currencyDisplay === void 0 ) currencyDisplay = SYMBOL;\n\n    if (currencyDisplay === \"code\") {\n        return currency;\n    }\n\n    var currencyInfo = getCurrencyInfo(locale, currency, true);\n    var result;\n\n    if (currencyDisplay === SYMBOL) {\n        result = currencyInfo[\"symbol-alt-narrow\"] || currencyInfo[SYMBOL];\n    } else {\n        if (typeof value === \"undefined\" || value !== 1) {\n            result = currencyInfo[\"displayName-count-other\"];\n        } else {\n            result = currencyInfo[\"displayName-count-one\"];\n        }\n    }\n\n    return result;\n}\n\nexport function currencyFractionOptions(code) {\n    var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n    var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n\n    var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];\n\n    if (fractions && fractions._digits) {\n        maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);\n    }\n\n    return {\n        minimumFractionDigits: minimumFractionDigits,\n        maximumFractionDigits: maximumFractionDigits\n    };\n}\n\nexport function territoryCurrencyCode(territory, throwIfNoValid) {\n    if ( throwIfNoValid === void 0 ) throwIfNoValid = true;\n\n    if (GLOBAL_CURRENCIES[territory]) {\n        return GLOBAL_CURRENCIES[territory];\n    }\n\n    var currencyData = cldr.supplemental.currencyData;\n    if (!currencyData) {\n        if (throwIfNoValid) {\n            throw NoSupplementalCurrency.error();\n        }\n\n        return;\n    }\n\n    var regionCurrencies = currencyData.region[territory];\n\n    if (!regionCurrencies) {\n        if (throwIfNoValid) {\n            throw NoCurrencyRegion.error(territory);\n        }\n\n        return;\n    }\n\n    var currencyCode = regionCurrency(regionCurrencies);\n\n    return currencyCode;\n}\n\nexport function localeCurrency(locale, throwIfNoValid) {\n    var info = getLocaleInfo(locale);\n    var numbers = info.numbers;\n\n    if (!numbers.localeCurrency) {\n        var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);\n\n        if (!currency && throwIfNoValid) {\n            throw NoValidCurrency.error(info.name);\n        }\n\n        numbers.localeCurrency = currency;\n    }\n\n    return numbers.localeCurrency;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}