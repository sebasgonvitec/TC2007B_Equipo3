{"ast":null,"code":"import { cldr } from './info';\nvar predefinedDatePatterns = {\n  s: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\n  u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\n};\nvar YEAR_REGEX = /y+/g;\nvar SHORT_DATE = [[\"dateFormats\", \"short\"]];\nvar datePatterns = {\n  D: [[\"dateFormats\", \"full\"]],\n  m: [[\"dateTimeFormats\", \"availableFormats\", \"MMMd\"]],\n  M: [[\"dateTimeFormats\", \"availableFormats\", \"MMMMd\"]],\n  y: [[\"dateTimeFormats\", \"availableFormats\", \"yMMM\"]],\n  Y: [[\"dateTimeFormats\", \"availableFormats\", \"yMMMM\"]],\n  F: [[\"dateFormats\", \"full\"], [\"timeFormats\", \"medium\"]],\n  g: [[\"dateTimeFormats\", \"availableFormats\", \"yMd\"], [\"timeFormats\", \"short\"]],\n  G: [[\"dateTimeFormats\", \"availableFormats\", \"yMd\"], [\"timeFormats\", \"medium\"]],\n  t: [[\"timeFormats\", \"short\"]],\n  T: [[\"timeFormats\", \"medium\"]]\n};\n\nfunction toArray(obj) {\n  var result = [];\n  var names = Object.getOwnPropertyNames(obj);\n\n  for (var idx = 0; idx < names.length; idx++) {\n    var value = obj[names[idx]];\n    result.push(value);\n  }\n\n  return result;\n}\n\nfunction getCalendarNames(info, isObj) {\n  var result = {};\n\n  for (var formatType in info) {\n    var names = result[formatType] = {};\n\n    for (var format in info[formatType]) {\n      var formats = info[formatType][format];\n      names[format] = isObj ? formats : toArray(formats);\n    }\n  }\n\n  return result;\n}\n\nfunction getEraNames(eras) {\n  var result = {};\n  var format = result.format = {};\n  var eraNameMap = {\n    eraAbbr: \"abbreviated\",\n    eraNames: \"wide\",\n    eraNarrow: \"narrow\"\n  };\n\n  for (var eraFormatName in eras) {\n    var formatName = eraNameMap[eraFormatName];\n    format[formatName] = eras[eraFormatName];\n  }\n\n  return result;\n}\n\nfunction loadCalendarNames(locale, calendar) {\n  var localeCalendar = cldr[locale].calendar;\n  localeCalendar.days = getCalendarNames(calendar.days);\n  localeCalendar.months = getCalendarNames(calendar.months);\n  localeCalendar.quarters = getCalendarNames(calendar.quarters);\n  localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);\n  localeCalendar.eras = getEraNames(calendar.eras);\n}\n\nfunction loadCalendarDateFields(locale, fields) {\n  var localeCalendar = cldr[locale].calendar;\n  var dateFields = {};\n\n  for (var field in fields) {\n    var ref = field.split('-');\n    var fieldName = ref[0];\n    var formatType = ref[1];\n    if (formatType === void 0) formatType = 'wide';\n    var fieldInfo = dateFields[fieldName] || {};\n    var displayName = fields[field].displayName;\n\n    if (!displayName) {\n      continue;\n    }\n\n    fieldInfo[formatType] = displayName;\n    dateFields[fieldName] = fieldInfo;\n  }\n\n  localeCalendar.dateFields = dateFields;\n}\n\nfunction getPredefinedFormat(paths, calendar) {\n  var result = [];\n\n  for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {\n    var fields = paths[pathIdx];\n    var pattern = calendar;\n\n    for (var idx = 0; idx < fields.length; idx++) {\n      pattern = pattern[fields[idx]];\n    }\n\n    result.push(pattern);\n  }\n\n  return result.join(\" \");\n}\n\nfunction loadCalendarPatterns(locale, calendar) {\n  var cldrCalendar = cldr[locale].calendar;\n  var patterns = cldrCalendar.patterns = {};\n  patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, 'y');\n\n  for (var pattern in datePatterns) {\n    patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);\n  }\n\n  for (var pattern$1 in predefinedDatePatterns) {\n    patterns[pattern$1] = predefinedDatePatterns[pattern$1];\n  }\n\n  var dateTimeFormats = calendar.dateTimeFormats;\n  cldrCalendar.dateTimeFormats = {\n    full: dateTimeFormats.full,\n    long: dateTimeFormats.long,\n    medium: dateTimeFormats.medium,\n    short: dateTimeFormats.short,\n    availableFormats: dateTimeFormats.availableFormats\n  };\n  cldrCalendar.timeFormats = calendar.timeFormats;\n  cldrCalendar.dateFormats = calendar.dateFormats;\n}\n\nexport default function loadCalendarInfo(locale, info) {\n  var calendar = cldr[locale].calendar = cldr[locale].calendar || {};\n\n  for (var field in info) {\n    if (field === \"timeZoneNames\") {\n      calendar.gmtFormat = info[field].gmtFormat;\n      calendar.gmtZeroFormat = info[field].gmtZeroFormat;\n    } else if (field === \"calendars\" && info[field].gregorian) {\n      loadCalendarPatterns(locale, info[field].gregorian);\n      loadCalendarNames(locale, info[field].gregorian);\n    } else if (field === \"fields\") {\n      loadCalendarDateFields(locale, info.fields);\n    }\n  }\n}","map":{"version":3,"names":["cldr","predefinedDatePatterns","s","u","YEAR_REGEX","SHORT_DATE","datePatterns","D","m","M","y","Y","F","g","G","t","T","toArray","obj","result","names","Object","getOwnPropertyNames","idx","length","value","push","getCalendarNames","info","isObj","formatType","format","formats","getEraNames","eras","eraNameMap","eraAbbr","eraNames","eraNarrow","eraFormatName","formatName","loadCalendarNames","locale","calendar","localeCalendar","days","months","quarters","dayPeriods","loadCalendarDateFields","fields","dateFields","field","ref","split","fieldName","fieldInfo","displayName","getPredefinedFormat","paths","pathIdx","pattern","join","loadCalendarPatterns","cldrCalendar","patterns","d","replace","pattern$1","dateTimeFormats","full","long","medium","short","availableFormats","timeFormats","dateFormats","loadCalendarInfo","gmtFormat","gmtZeroFormat","gregorian"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-intl/dist/es/cldr/load-dates.js"],"sourcesContent":["import { cldr } from './info';\n\nvar predefinedDatePatterns = {\n    s: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\n    u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\n};\n\nvar YEAR_REGEX = /y+/g;\nvar SHORT_DATE = [ [ \"dateFormats\", \"short\" ] ];\n\nvar datePatterns = {\n    D: [ [ \"dateFormats\", \"full\" ] ],\n    m: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMd\" ] ],\n    M: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMMd\" ] ],\n    y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMM\" ] ],\n    Y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMMM\" ] ],\n    F: [ [ \"dateFormats\", \"full\" ], [ \"timeFormats\", \"medium\" ] ],\n    g: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"short\" ] ],\n    G: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"medium\" ] ],\n    t: [ [ \"timeFormats\", \"short\" ] ],\n    T: [ [ \"timeFormats\", \"medium\" ] ]\n};\n\nfunction toArray(obj) {\n    var result = [];\n    var names = Object.getOwnPropertyNames(obj);\n    for (var idx = 0; idx < names.length; idx++) {\n        var value = obj[names[idx]];\n        result.push(value);\n    }\n    return result;\n}\n\nfunction getCalendarNames(info, isObj) {\n    var result = {};\n    for (var formatType in info) {\n        var names = result[formatType] = {};\n        for (var format in info[formatType]) {\n            var formats = info[formatType][format];\n            names[format] = isObj ? formats : toArray(formats);\n        }\n    }\n    return result;\n}\n\nfunction getEraNames(eras) {\n    var result = {};\n    var format = result.format = {};\n    var eraNameMap = {\n        eraAbbr: \"abbreviated\",\n        eraNames: \"wide\",\n        eraNarrow: \"narrow\"\n    };\n\n    for (var eraFormatName in eras) {\n        var formatName = eraNameMap[eraFormatName];\n        format[formatName] = eras[eraFormatName];\n    }\n\n    return result;\n}\n\nfunction loadCalendarNames(locale, calendar) {\n    var localeCalendar = cldr[locale].calendar;\n    localeCalendar.days = getCalendarNames(calendar.days);\n    localeCalendar.months = getCalendarNames(calendar.months);\n    localeCalendar.quarters = getCalendarNames(calendar.quarters);\n    localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);\n\n    localeCalendar.eras = getEraNames(calendar.eras);\n}\n\nfunction loadCalendarDateFields(locale, fields) {\n    var localeCalendar = cldr[locale].calendar;\n    var dateFields = {};\n\n    for (var field in fields) {\n        var ref = field.split('-');\n        var fieldName = ref[0];\n        var formatType = ref[1]; if ( formatType === void 0 ) formatType = 'wide';\n        var fieldInfo = dateFields[fieldName] || {};\n        var displayName = fields[field].displayName;\n\n        if (!displayName) { continue; }\n\n        fieldInfo[formatType] = displayName;\n        dateFields[fieldName] = fieldInfo;\n    }\n\n    localeCalendar.dateFields = dateFields;\n}\n\nfunction getPredefinedFormat(paths, calendar) {\n    var result = [];\n\n    for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {\n        var fields = paths[ pathIdx ];\n        var pattern = calendar;\n        for (var idx = 0; idx < fields.length; idx++) {\n            pattern = pattern[fields[idx]];\n        }\n        result.push(pattern);\n    }\n\n    return result.join(\" \");\n}\n\nfunction loadCalendarPatterns(locale, calendar) {\n    var cldrCalendar = cldr[locale].calendar;\n    var patterns = cldrCalendar.patterns = {};\n\n    patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, 'y');\n\n    for (var pattern in datePatterns) {\n        patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);\n    }\n\n    for (var pattern$1 in predefinedDatePatterns) {\n        patterns[pattern$1] = predefinedDatePatterns[pattern$1];\n    }\n\n    var dateTimeFormats = calendar.dateTimeFormats;\n    cldrCalendar.dateTimeFormats = {\n        full: dateTimeFormats.full,\n        long: dateTimeFormats.long,\n        medium: dateTimeFormats.medium,\n        short: dateTimeFormats.short,\n        availableFormats: dateTimeFormats.availableFormats\n    };\n    cldrCalendar.timeFormats = calendar.timeFormats;\n    cldrCalendar.dateFormats = calendar.dateFormats;\n}\n\n\nexport default function loadCalendarInfo(locale, info) {\n    var calendar = cldr[locale].calendar = cldr[locale].calendar || {};\n    for (var field in info) {\n        if (field === \"timeZoneNames\") {\n            calendar.gmtFormat = info[field].gmtFormat;\n            calendar.gmtZeroFormat = info[field].gmtZeroFormat;\n        } else if (field === \"calendars\" && info[field].gregorian) {\n            loadCalendarPatterns(locale, info[field].gregorian);\n            loadCalendarNames(locale, info[field].gregorian);\n        } else if (field === \"fields\") {\n            loadCalendarDateFields(locale, info.fields);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}