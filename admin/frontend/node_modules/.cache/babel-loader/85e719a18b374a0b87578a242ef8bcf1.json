{"ast":null,"code":"import Node from './node';\nimport { defined, isTransparent } from '../util';\nimport { DASH_ARRAYS, SOLID, BUTT } from '../core/constants';\nimport { NONE, POINT_DIGITS } from './constants';\nimport renderAllAttr from './utils/render-all-attributes';\nimport renderAttr from './utils/render-attribute';\nvar ATTRIBUTE_MAP = {\n  \"fill.opacity\": \"fill-opacity\",\n  \"stroke.color\": \"stroke\",\n  \"stroke.width\": \"stroke-width\",\n  \"stroke.opacity\": \"stroke-opacity\"\n};\n\nvar PathNode = function (Node) {\n  function PathNode() {\n    Node.apply(this, arguments);\n  }\n\n  if (Node) PathNode.__proto__ = Node;\n  PathNode.prototype = Object.create(Node && Node.prototype);\n  PathNode.prototype.constructor = PathNode;\n\n  PathNode.prototype.geometryChange = function geometryChange() {\n    this.attr(\"d\", this.renderData());\n    this.invalidate();\n  };\n\n  PathNode.prototype.optionsChange = function optionsChange(e) {\n    switch (e.field) {\n      case \"fill\":\n        if (e.value) {\n          this.allAttr(this.mapFill(e.value));\n        } else {\n          this.removeAttr(\"fill\");\n        }\n\n        break;\n\n      case \"fill.color\":\n        this.allAttr(this.mapFill({\n          color: e.value\n        }));\n        break;\n\n      case \"stroke\":\n        if (e.value) {\n          this.allAttr(this.mapStroke(e.value));\n        } else {\n          this.removeAttr(\"stroke\");\n        }\n\n        break;\n\n      case \"transform\":\n        this.transformChange(e.value);\n        break;\n\n      default:\n        var name = ATTRIBUTE_MAP[e.field];\n\n        if (name) {\n          this.attr(name, e.value);\n        }\n\n        break;\n    }\n\n    Node.prototype.optionsChange.call(this, e);\n  };\n\n  PathNode.prototype.content = function content() {\n    if (this.element) {\n      this.element.textContent = this.srcElement.content();\n    }\n  };\n\n  PathNode.prototype.renderData = function renderData() {\n    return this.srcElement.toString(POINT_DIGITS) || undefined;\n  };\n\n  PathNode.prototype.mapStroke = function mapStroke(stroke) {\n    var attrs = [];\n\n    if (stroke && !isTransparent(stroke.color)) {\n      attrs.push([\"stroke\", stroke.color]);\n      attrs.push([\"stroke-width\", stroke.width]);\n      attrs.push([\"stroke-linecap\", this.renderLinecap(stroke)]);\n      attrs.push([\"stroke-linejoin\", stroke.lineJoin]);\n\n      if (defined(stroke.opacity)) {\n        attrs.push([\"stroke-opacity\", stroke.opacity]);\n      }\n\n      if (defined(stroke.dashType)) {\n        attrs.push([\"stroke-dasharray\", this.renderDashType(stroke)]);\n      }\n    } else {\n      attrs.push([\"stroke\", NONE]);\n    }\n\n    return attrs;\n  };\n\n  PathNode.prototype.renderStroke = function renderStroke() {\n    return renderAllAttr(this.mapStroke(this.srcElement.options.stroke));\n  };\n\n  PathNode.prototype.renderDashType = function renderDashType(stroke) {\n    var dashType = stroke.dashType;\n    var width = stroke.width;\n    if (width === void 0) width = 1;\n\n    if (dashType && dashType !== SOLID) {\n      var dashArray = DASH_ARRAYS[dashType.toLowerCase()];\n      var result = [];\n\n      for (var i = 0; i < dashArray.length; i++) {\n        result.push(dashArray[i] * width);\n      }\n\n      return result.join(\" \");\n    }\n  };\n\n  PathNode.prototype.renderLinecap = function renderLinecap(stroke) {\n    var dashType = stroke.dashType;\n    var lineCap = stroke.lineCap;\n    return dashType && dashType !== \"solid\" ? BUTT : lineCap;\n  };\n\n  PathNode.prototype.mapFill = function mapFill(fill) {\n    var attrs = [];\n\n    if (!(fill && fill.nodeType === \"Gradient\")) {\n      if (fill && !isTransparent(fill.color)) {\n        attrs.push([\"fill\", fill.color]);\n\n        if (defined(fill.opacity)) {\n          attrs.push([\"fill-opacity\", fill.opacity]);\n        }\n      } else {\n        attrs.push([\"fill\", NONE]);\n      }\n    }\n\n    return attrs;\n  };\n\n  PathNode.prototype.renderFill = function renderFill() {\n    return renderAllAttr(this.mapFill(this.srcElement.options.fill));\n  };\n\n  PathNode.prototype.template = function template() {\n    return \"<path \" + this.renderId() + \" \" + this.renderStyle() + \" \" + this.renderOpacity() + \" \" + renderAttr('d', this.renderData()) + \"\" + this.renderStroke() + this.renderFill() + this.renderDefinitions() + this.renderTransform() + \"></path>\";\n  };\n\n  return PathNode;\n}(Node);\n\nexport default PathNode;","map":{"version":3,"names":["Node","defined","isTransparent","DASH_ARRAYS","SOLID","BUTT","NONE","POINT_DIGITS","renderAllAttr","renderAttr","ATTRIBUTE_MAP","PathNode","apply","arguments","__proto__","prototype","Object","create","constructor","geometryChange","attr","renderData","invalidate","optionsChange","e","field","value","allAttr","mapFill","removeAttr","color","mapStroke","transformChange","name","call","content","element","textContent","srcElement","toString","undefined","stroke","attrs","push","width","renderLinecap","lineJoin","opacity","dashType","renderDashType","renderStroke","options","dashArray","toLowerCase","result","i","length","join","lineCap","fill","nodeType","renderFill","template","renderId","renderStyle","renderOpacity","renderDefinitions","renderTransform"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-drawing/dist/es/svg/path-node.js"],"sourcesContent":["import Node from './node';\nimport { defined, isTransparent } from '../util';\nimport { DASH_ARRAYS, SOLID, BUTT } from '../core/constants';\nimport { NONE, POINT_DIGITS } from './constants';\nimport renderAllAttr from './utils/render-all-attributes';\nimport renderAttr from './utils/render-attribute';\n\nvar ATTRIBUTE_MAP = {\n    \"fill.opacity\": \"fill-opacity\",\n    \"stroke.color\": \"stroke\",\n    \"stroke.width\": \"stroke-width\",\n    \"stroke.opacity\": \"stroke-opacity\"\n};\n\nvar PathNode = (function (Node) {\n    function PathNode () {\n        Node.apply(this, arguments);\n    }\n\n    if ( Node ) PathNode.__proto__ = Node;\n    PathNode.prototype = Object.create( Node && Node.prototype );\n    PathNode.prototype.constructor = PathNode;\n\n    PathNode.prototype.geometryChange = function geometryChange () {\n        this.attr(\"d\", this.renderData());\n        this.invalidate();\n    };\n\n    PathNode.prototype.optionsChange = function optionsChange (e) {\n        switch (e.field) {\n            case \"fill\":\n                if (e.value) {\n                    this.allAttr(this.mapFill(e.value));\n                } else {\n                    this.removeAttr(\"fill\");\n                }\n                break;\n\n            case \"fill.color\":\n                this.allAttr(this.mapFill({ color: e.value }));\n                break;\n\n            case \"stroke\":\n                if (e.value) {\n                    this.allAttr(this.mapStroke(e.value));\n                } else {\n                    this.removeAttr(\"stroke\");\n                }\n                break;\n\n            case \"transform\":\n                this.transformChange(e.value);\n                break;\n\n            default:\n                var name = ATTRIBUTE_MAP[e.field];\n                if (name) {\n                    this.attr(name, e.value);\n                }\n                break;\n        }\n\n        Node.prototype.optionsChange.call(this, e);\n    };\n\n    PathNode.prototype.content = function content () {\n        if (this.element) {\n            this.element.textContent = this.srcElement.content();\n        }\n    };\n\n    PathNode.prototype.renderData = function renderData () {\n        return this.srcElement.toString(POINT_DIGITS) || undefined;\n    };\n\n    PathNode.prototype.mapStroke = function mapStroke (stroke) {\n        var attrs = [];\n\n        if (stroke && !isTransparent(stroke.color)) {\n            attrs.push([ \"stroke\", stroke.color ]);\n            attrs.push([ \"stroke-width\", stroke.width ]);\n            attrs.push([ \"stroke-linecap\", this.renderLinecap(stroke) ]);\n            attrs.push([ \"stroke-linejoin\", stroke.lineJoin ]);\n\n            if (defined(stroke.opacity)) {\n                attrs.push([ \"stroke-opacity\", stroke.opacity ]);\n            }\n\n            if (defined(stroke.dashType)) {\n                attrs.push([ \"stroke-dasharray\", this.renderDashType(stroke) ]);\n            }\n        } else {\n            attrs.push([ \"stroke\", NONE ]);\n        }\n\n        return attrs;\n    };\n\n    PathNode.prototype.renderStroke = function renderStroke () {\n        return renderAllAttr(\n            this.mapStroke(this.srcElement.options.stroke)\n        );\n    };\n\n    PathNode.prototype.renderDashType = function renderDashType (stroke) {\n        var dashType = stroke.dashType;\n        var width = stroke.width; if ( width === void 0 ) width = 1;\n\n        if (dashType && dashType !== SOLID) {\n            var dashArray = DASH_ARRAYS[dashType.toLowerCase()];\n            var result = [];\n\n            for (var i = 0; i < dashArray.length; i++) {\n                result.push(dashArray[i] * width);\n            }\n\n            return result.join(\" \");\n        }\n    };\n\n    PathNode.prototype.renderLinecap = function renderLinecap (stroke) {\n        var dashType = stroke.dashType;\n        var lineCap = stroke.lineCap;\n\n        return (dashType && dashType !== \"solid\") ? BUTT : lineCap;\n    };\n\n    PathNode.prototype.mapFill = function mapFill (fill) {\n        var attrs = [];\n        if (!(fill && fill.nodeType === \"Gradient\")) {\n            if (fill && !isTransparent(fill.color)) {\n                attrs.push([ \"fill\", fill.color ]);\n\n                if (defined(fill.opacity)) {\n                    attrs.push([ \"fill-opacity\", fill.opacity ]);\n                }\n            } else {\n                attrs.push([ \"fill\", NONE ]);\n            }\n        }\n\n        return attrs;\n    };\n\n    PathNode.prototype.renderFill = function renderFill () {\n        return renderAllAttr(\n            this.mapFill(this.srcElement.options.fill)\n        );\n    };\n\n    PathNode.prototype.template = function template () {\n        return \"<path \" + (this.renderId()) + \" \" + (this.renderStyle()) + \" \" + (this.renderOpacity()) + \" \" + (renderAttr('d', this.renderData())) +\n                    \"\" + (this.renderStroke()) + (this.renderFill()) + (this.renderDefinitions()) + (this.renderTransform()) + \"></path>\";\n    };\n\n    return PathNode;\n}(Node));\n\nexport default PathNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}