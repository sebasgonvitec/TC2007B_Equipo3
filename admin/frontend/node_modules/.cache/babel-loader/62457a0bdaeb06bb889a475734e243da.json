{"ast":null,"code":"import { formatDate } from './dates';\nimport { formatNumber } from './numbers';\nimport { EMPTY } from './common/constants';\nimport isDate from './common/is-date';\nimport isNumber from './common/is-number';\nvar formatRegExp = /\\{(\\d+)(:[^}]+)?\\}/g;\nexport function toString(value, format, locale) {\n  if (format) {\n    if (isDate(value)) {\n      return formatDate(value, format, locale);\n    } else if (isNumber(value)) {\n      return formatNumber(value, format, locale);\n    }\n  }\n\n  return value !== undefined && value !== null ? value : EMPTY;\n}\nexport function format(format, values, locale) {\n  return format.replace(formatRegExp, function (match, index, placeholderFormat) {\n    var value = values[parseInt(index, 10)];\n    return toString(value, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale);\n  });\n}","map":{"version":3,"names":["formatDate","formatNumber","EMPTY","isDate","isNumber","formatRegExp","toString","value","format","locale","undefined","values","replace","match","index","placeholderFormat","parseInt","substring"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-intl/dist/es/format.js"],"sourcesContent":["import { formatDate } from './dates';\nimport { formatNumber } from './numbers';\nimport { EMPTY } from './common/constants';\nimport isDate from './common/is-date';\nimport isNumber from './common/is-number';\n\nvar formatRegExp = /\\{(\\d+)(:[^}]+)?\\}/g;\n\nexport function toString(value, format, locale) {\n    if (format) {\n        if (isDate(value)) {\n            return formatDate(value, format, locale);\n        } else if (isNumber(value)) {\n            return formatNumber(value, format, locale);\n        }\n    }\n\n    return value !== undefined && value !== null ? value : EMPTY;\n}\n\nexport function format(format, values, locale) {\n    return format.replace(formatRegExp, function(match, index, placeholderFormat) {\n        var value = values[parseInt(index, 10)];\n\n        return toString(value, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale);\n    });\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,SAA3B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,IAAIC,YAAY,GAAG,qBAAnB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyC;EAC5C,IAAID,MAAJ,EAAY;IACR,IAAIL,MAAM,CAACI,KAAD,CAAV,EAAmB;MACf,OAAOP,UAAU,CAACO,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,CAAjB;IACH,CAFD,MAEO,IAAIL,QAAQ,CAACG,KAAD,CAAZ,EAAqB;MACxB,OAAON,YAAY,CAACM,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,CAAnB;IACH;EACJ;;EAED,OAAOF,KAAK,KAAKG,SAAV,IAAuBH,KAAK,KAAK,IAAjC,GAAwCA,KAAxC,GAAgDL,KAAvD;AACH;AAED,OAAO,SAASM,MAAT,CAAgBA,MAAhB,EAAwBG,MAAxB,EAAgCF,MAAhC,EAAwC;EAC3C,OAAOD,MAAM,CAACI,OAAP,CAAeP,YAAf,EAA6B,UAASQ,KAAT,EAAgBC,KAAhB,EAAuBC,iBAAvB,EAA0C;IAC1E,IAAIR,KAAK,GAAGI,MAAM,CAACK,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAT,CAAlB;IAEA,OAAOR,QAAQ,CAACC,KAAD,EAAQQ,iBAAiB,GAAGA,iBAAiB,CAACE,SAAlB,CAA4B,CAA5B,CAAH,GAAoCf,KAA7D,EAAoEO,MAApE,CAAf;EACH,CAJM,CAAP;AAKH"},"metadata":{},"sourceType":"module"}