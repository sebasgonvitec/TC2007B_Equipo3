{"ast":null,"code":"var fromCharCode = String.fromCharCode;\nexport var BOM = '\\xfe\\xff'; // Encodes a string as UTF-8\n\nexport function encodeUTF8(input) {\n  var output = \"\";\n\n  for (var i = 0; i < input.length; i++) {\n    var code = input.charCodeAt(i);\n\n    if (0xD800 <= code && code <= 0xDBFF) {\n      var hi = code;\n      var low = input.charCodeAt(++i);\n\n      if (!isNaN(low)) {\n        // Combine high and low surrogate\n        // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n        code = (hi - 0xD800) * 0x400 + (low - 0xDC00) + 0x10000;\n      }\n    }\n\n    if (code < 0x80) {\n      // One byte\n      output += fromCharCode(code);\n    } else if (code < 0x800) {\n      // Two bytes\n      output += fromCharCode(0xC0 | code >>> 6);\n      output += fromCharCode(0x80 | code & 0x3f);\n    } else if (code < 0x10000) {\n      // Three bytes\n      output += fromCharCode(0xE0 | code >>> 12);\n      output += fromCharCode(0x80 | code >>> 6 & 0x3f);\n      output += fromCharCode(0x80 | code & 0x3f);\n    } else if (code < 0x10FFFF) {\n      // Four bytes\n      output += fromCharCode(0xF0 | code >>> 18);\n      output += fromCharCode(0x80 | code >>> 12 & 0x3f);\n      output += fromCharCode(0x80 | code >>> 6 & 0x3f);\n      output += fromCharCode(0x80 | code & 0x3f);\n    }\n  }\n\n  return output;\n}\n\nfunction encodeUnit(codeUnit) {\n  return fromCharCode(codeUnit >> 8) + fromCharCode(codeUnit & 0x00ff);\n} // Encodes a string as UTF-16 big-endian\n\n\nexport function encodeUTF16BE(input) {\n  var output = '';\n\n  for (var i = 0; i < input.length; i++) {\n    var c = input.charCodeAt(i);\n\n    if (c < 0xFFFF) {\n      output += encodeUnit(c);\n    } else {\n      var lead = (c - 0x10000 >> 10) + 0xD800;\n      var trail = (c - 0x10000 & 0x3FF) + 0xDC00;\n      output += encodeUnit(lead);\n      output += encodeUnit(trail);\n    }\n  }\n\n  return output;\n}","map":{"version":3,"names":["fromCharCode","String","BOM","encodeUTF8","input","output","i","length","code","charCodeAt","hi","low","isNaN","encodeUnit","codeUnit","encodeUTF16BE","c","lead","trail"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-drawing/dist/es/util/encode-utf.js"],"sourcesContent":["var fromCharCode = String.fromCharCode;\n\nexport var BOM = '\\xfe\\xff';\n\n// Encodes a string as UTF-8\nexport function encodeUTF8(input) {\n    var output = \"\";\n\n    for (var i = 0; i < input.length; i++) {\n        var code = input.charCodeAt(i);\n\n        if (0xD800 <= code && code <= 0xDBFF) {\n            var hi = code;\n            var low = input.charCodeAt(++i);\n\n            if (!isNaN(low)) {\n                // Combine high and low surrogate\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n                code = (hi - 0xD800) * 0x400 +\n                       (low - 0xDC00) + 0x10000;\n            }\n        }\n\n        if (code < 0x80) {\n            // One byte\n            output += fromCharCode(code);\n        } else if (code < 0x800) {\n            // Two bytes\n            output += fromCharCode(0xC0 | (code >>> 6));\n            output += fromCharCode(0x80 | (code & 0x3f));\n        } else if (code < 0x10000) {\n            // Three bytes\n            output += fromCharCode(0xE0 | (code >>> 12));\n            output += fromCharCode(0x80 | (code >>> 6 & 0x3f));\n            output += fromCharCode(0x80 | (code & 0x3f));\n        } else if (code < 0x10FFFF) {\n            // Four bytes\n            output += fromCharCode(0xF0 | (code >>> 18));\n            output += fromCharCode(0x80 | (code >>> 12 & 0x3f));\n            output += fromCharCode(0x80 | (code >>> 6 & 0x3f));\n            output += fromCharCode(0x80 | (code & 0x3f));\n        }\n    }\n\n    return output;\n}\n\nfunction encodeUnit(codeUnit) {\n    return fromCharCode(codeUnit >> 8) + fromCharCode(codeUnit & 0x00ff);\n}\n\n// Encodes a string as UTF-16 big-endian\nexport function encodeUTF16BE(input) {\n    var output = '';\n\n    for (var i = 0; i < input.length; i++) {\n        var c = input.charCodeAt(i);\n\n        if (c < 0xFFFF) {\n            output += encodeUnit(c);\n        } else {\n            var lead = ((c - 0x10000) >> 10) + 0xD800;\n            var trail = ((c - 0x10000) & 0x3FF) + 0xDC00;\n            output += encodeUnit(lead);\n            output += encodeUnit(trail);\n        }\n    }\n\n    return output;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}