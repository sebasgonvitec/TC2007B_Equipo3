{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asana\\\\Documents\\\\TEC\\\\Semestre 5\\\\Seguridad_Informatica\\\\ModuloReact\\\\demo\\\\frontend\\\\src\\\\components\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport \"@progress/kendo-theme-material/dist/all.css\";\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\nimport { process } from \"@progress/kendo-data-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URI = 'http://localhost:1337/';\n\nconst ShowSearch = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []); //Funcion para obtener los datos de la DB\n\n  const getData = async () => {\n    const res = await axios.get(URI);\n    setData(res.data);\n  }; //Tabla\n\n\n  const [dataState, setDataState] = React.useState();\n  const [result, setResult] = React.useState(data);\n  useEffect(() => {\n    setResult(data);\n  }, [data]);\n\n  const onDataStateChange = event => {\n    setDataState(event.dataState);\n    setResult(process(data, event.dataState));\n  }; //Filtros para la tabla\n\n\n  const filterOperators = {\n    text: [{\n      text: \"Alohaaa\",\n      operator: \"contains\"\n    }],\n    numeric: [{\n      text: \"grid.filterEqOperator\",\n      operator: \"eq\"\n    }],\n    date: [{\n      text: \"grid.filterEqOperator\",\n      operator: \"eq\"\n    }],\n    boolean: [{\n      text: \"grid.filterEqOperator\",\n      operator: \"eq\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    data: result,\n    filterable: true,\n    onDataStateChange: onDataStateChange,\n    filterOperators: filterOperators,\n    ...dataState,\n    children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"nombre\",\n      title: \"Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"numero\",\n      title: \"N\\xFAmero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"expediente\",\n      title: \"Expediente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"actor\",\n      title: \"Actor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"estatus\",\n      title: \"Estatus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowSearch, \"iZ4lmdqyft8Pxjd5ku9X8svfm7w=\");\n\n_c = ShowSearch;\nexport default ShowSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSearch\");","map":{"version":3,"names":["axios","React","useState","useEffect","Grid","GridColumn","process","URI","ShowSearch","data","setData","getData","res","get","dataState","setDataState","result","setResult","onDataStateChange","event","filterOperators","text","operator","numeric","date","boolean"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/src/components/search.js"],"sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\n\r\nconst URI = 'http://localhost:1337/'\r\n\r\nconst ShowSearch = () => {\r\n   \r\n    const [data, setData] = useState([]);\r\n    useEffect( () => {\r\n        getData()\r\n    }, [])\r\n\r\n    //Funcion para obtener los datos de la DB\r\n    const getData = async () => {\r\n        const res = await axios.get(URI)\r\n        setData(res.data)\r\n    }\r\n\r\n    //Tabla\r\n    const [dataState, setDataState] = React.useState()\r\n    const [result, setResult] = React.useState(data);\r\n    useEffect(() => { setResult(data)}, [data] )\r\n   \r\n\r\n    const onDataStateChange = (event) => {\r\n        setDataState(event.dataState);\r\n        setResult(process(data, event.dataState));\r\n    }\r\n\r\n    //Filtros para la tabla\r\n    const filterOperators = {\r\n        text: [\r\n          {\r\n            text: \"Alohaaa\",\r\n            operator: \"contains\",\r\n          },\r\n        ],\r\n        numeric: [\r\n          {\r\n            text: \"grid.filterEqOperator\",\r\n            operator: \"eq\",\r\n          },\r\n        ],\r\n        date: [\r\n          {\r\n            text: \"grid.filterEqOperator\",\r\n            operator: \"eq\",\r\n          },\r\n        ],\r\n        boolean: [\r\n          {\r\n            text: \"grid.filterEqOperator\",\r\n            operator: \"eq\",\r\n          },\r\n        ],\r\n      };\r\n\r\n\r\n\r\n    return(\r\n        <Grid\r\n            data={result}\r\n            filterable={true}\r\n            onDataStateChange={onDataStateChange}\r\n            filterOperators={filterOperators}\r\n            {...dataState}\r\n           \r\n        >\r\n            <GridColumn field=\"nombre\" title=\"Nombre\" />\r\n            <GridColumn field=\"numero\" title=\"NÃºmero\" />\r\n            <GridColumn field=\"expediente\" title=\"Expediente\" />\r\n            <GridColumn field=\"actor\" title=\"Actor\" />\r\n            <GridColumn field=\"estatus\" title=\"Estatus\"/>\r\n\r\n        </Grid>   \r\n    );\r\n}\r\n\r\nexport default ShowSearch;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,6CAAP;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,MAAMC,GAAG,GAAG,wBAAZ;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAErB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACAC,SAAS,CAAE,MAAM;IACbQ,OAAO;EACV,CAFQ,EAEN,EAFM,CAAT,CAHqB,CAOrB;;EACA,MAAMA,OAAO,GAAG,YAAY;IACxB,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUN,GAAV,CAAlB;IACAG,OAAO,CAACE,GAAG,CAACH,IAAL,CAAP;EACH,CAHD,CARqB,CAarB;;;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4Bd,KAAK,CAACC,QAAN,EAAlC;EACA,MAAM,CAACc,MAAD,EAASC,SAAT,IAAsBhB,KAAK,CAACC,QAAN,CAAeO,IAAf,CAA5B;EACAN,SAAS,CAAC,MAAM;IAAEc,SAAS,CAACR,IAAD,CAAT;EAAgB,CAAzB,EAA2B,CAACA,IAAD,CAA3B,CAAT;;EAGA,MAAMS,iBAAiB,GAAIC,KAAD,IAAW;IACjCJ,YAAY,CAACI,KAAK,CAACL,SAAP,CAAZ;IACAG,SAAS,CAACX,OAAO,CAACG,IAAD,EAAOU,KAAK,CAACL,SAAb,CAAR,CAAT;EACH,CAHD,CAnBqB,CAwBrB;;;EACA,MAAMM,eAAe,GAAG;IACpBC,IAAI,EAAE,CACJ;MACEA,IAAI,EAAE,SADR;MAEEC,QAAQ,EAAE;IAFZ,CADI,CADc;IAOpBC,OAAO,EAAE,CACP;MACEF,IAAI,EAAE,uBADR;MAEEC,QAAQ,EAAE;IAFZ,CADO,CAPW;IAapBE,IAAI,EAAE,CACJ;MACEH,IAAI,EAAE,uBADR;MAEEC,QAAQ,EAAE;IAFZ,CADI,CAbc;IAmBpBG,OAAO,EAAE,CACP;MACEJ,IAAI,EAAE,uBADR;MAEEC,QAAQ,EAAE;IAFZ,CADO;EAnBW,CAAxB;EA6BA,oBACI,QAAC,IAAD;IACI,IAAI,EAAEN,MADV;IAEI,UAAU,EAAE,IAFhB;IAGI,iBAAiB,EAAEE,iBAHvB;IAII,eAAe,EAAEE,eAJrB;IAAA,GAKQN,SALR;IAAA,wBAQI,QAAC,UAAD;MAAY,KAAK,EAAC,QAAlB;MAA2B,KAAK,EAAC;IAAjC;MAAA;MAAA;MAAA;IAAA,QARJ,eASI,QAAC,UAAD;MAAY,KAAK,EAAC,QAAlB;MAA2B,KAAK,EAAC;IAAjC;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI,QAAC,UAAD;MAAY,KAAK,EAAC,YAAlB;MAA+B,KAAK,EAAC;IAArC;MAAA;MAAA;MAAA;IAAA,QAVJ,eAWI,QAAC,UAAD;MAAY,KAAK,EAAC,OAAlB;MAA0B,KAAK,EAAC;IAAhC;MAAA;MAAA;MAAA;IAAA,QAXJ,eAYI,QAAC,UAAD;MAAY,KAAK,EAAC,SAAlB;MAA4B,KAAK,EAAC;IAAlC;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CAvED;;GAAMN,U;;KAAAA,U;AAyEN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}