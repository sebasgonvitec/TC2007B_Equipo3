{"ast":null,"code":"export function convertTimeZone(date, fromOffset, toOffset) {\n  var fromLocalOffset = date.getTimezoneOffset();\n  var offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n  var toLocalOffset = offsetDate.getTimezoneOffset();\n  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n}\nexport function adjustDST(date, hours) {\n  if (!hours && date.getHours() === 23) {\n    date.setHours(date.getHours() + 2);\n  }\n}","map":{"version":3,"names":["convertTimeZone","date","fromOffset","toOffset","fromLocalOffset","getTimezoneOffset","offsetDate","Date","getTime","toLocalOffset","adjustDST","hours","getHours","setHours"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-intl/dist/es/dates/time-utils.js"],"sourcesContent":["export function convertTimeZone(date, fromOffset, toOffset) {\n    var fromLocalOffset = date.getTimezoneOffset();\n\n    var offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n\n    var toLocalOffset = offsetDate.getTimezoneOffset();\n\n    return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n}\n\nexport function adjustDST(date, hours) {\n    if (!hours && date.getHours() === 23) {\n        date.setHours(date.getHours() + 2);\n    }\n}"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqD;EACxD,IAAIC,eAAe,GAAGH,IAAI,CAACI,iBAAL,EAAtB;EAEA,IAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASN,IAAI,CAACO,OAAL,KAAiB,CAACN,UAAU,GAAGC,QAAd,IAA0B,KAApD,CAAjB;EAEA,IAAIM,aAAa,GAAGH,UAAU,CAACD,iBAAX,EAApB;EAEA,OAAO,IAAIE,IAAJ,CAASD,UAAU,CAACE,OAAX,KAAuB,CAACC,aAAa,GAAGL,eAAjB,IAAoC,KAApE,CAAP;AACH;AAED,OAAO,SAASM,SAAT,CAAmBT,IAAnB,EAAyBU,KAAzB,EAAgC;EACnC,IAAI,CAACA,KAAD,IAAUV,IAAI,CAACW,QAAL,OAAoB,EAAlC,EAAsC;IAClCX,IAAI,CAACY,QAAL,CAAcZ,IAAI,CAACW,QAAL,KAAkB,CAAhC;EACH;AACJ"},"metadata":{},"sourceType":"module"}