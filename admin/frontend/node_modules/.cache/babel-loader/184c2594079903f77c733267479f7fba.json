{"ast":null,"code":"import { DEFAULT_LOCALE } from '../common/constants';\nimport isNumber from '../common/is-number';\nimport datePattern from './date-pattern';\nimport dateNameType from './date-name-type';\nimport { dateFormatRegExp, DATE_FIELD_MAP } from './constants';\nimport { localeInfo } from '../cldr';\nvar NAME_TYPES = {\n  month: {\n    type: 'months',\n    minLength: 3,\n    standAlone: 'L'\n  },\n  quarter: {\n    type: 'quarters',\n    minLength: 3,\n    standAlone: 'q'\n  },\n  weekday: {\n    type: 'days',\n    minLength: {\n      E: 0,\n      c: 3,\n      e: 3\n    },\n    standAlone: 'c'\n  },\n  dayperiod: {\n    type: 'dayPeriods',\n    minLength: 0\n  },\n  era: {\n    type: 'eras',\n    minLength: 0\n  }\n};\nvar LITERAL = 'literal';\n\nfunction addLiteral(parts, value) {\n  var lastPart = parts[parts.length - 1];\n\n  if (lastPart && lastPart.type === LITERAL) {\n    lastPart.pattern += value;\n  } else {\n    parts.push({\n      type: LITERAL,\n      pattern: value\n    });\n  }\n}\n\nfunction isHour12(pattern) {\n  return pattern === 'h' || pattern === 'K';\n}\n\nexport default function splitDateFormat(format, locale) {\n  if (locale === void 0) locale = DEFAULT_LOCALE;\n  var info = localeInfo(locale);\n  var pattern = datePattern(format, info);\n  var parts = [];\n  var lastIndex = dateFormatRegExp.lastIndex = 0;\n  var match = dateFormatRegExp.exec(pattern);\n\n  while (match) {\n    var value = match[0];\n\n    if (lastIndex < match.index) {\n      addLiteral(parts, pattern.substring(lastIndex, match.index));\n    }\n\n    if (value.startsWith('\"') || value.startsWith(\"'\")) {\n      addLiteral(parts, value);\n    } else {\n      var specifier = value[0];\n      var type = DATE_FIELD_MAP[specifier];\n      var part = {\n        type: type,\n        pattern: value\n      };\n\n      if (type === 'hour') {\n        part.hour12 = isHour12(value);\n      }\n\n      var names = NAME_TYPES[type];\n\n      if (names) {\n        var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];\n        var patternLength = value.length;\n\n        if (patternLength >= minLength) {\n          part.names = {\n            type: names.type,\n            nameType: dateNameType(patternLength),\n            standAlone: names.standAlone === specifier\n          };\n        }\n      }\n\n      parts.push(part);\n    }\n\n    lastIndex = dateFormatRegExp.lastIndex;\n    match = dateFormatRegExp.exec(pattern);\n  }\n\n  if (lastIndex < pattern.length) {\n    addLiteral(parts, pattern.substring(lastIndex));\n  }\n\n  return parts;\n}","map":{"version":3,"names":["DEFAULT_LOCALE","isNumber","datePattern","dateNameType","dateFormatRegExp","DATE_FIELD_MAP","localeInfo","NAME_TYPES","month","type","minLength","standAlone","quarter","weekday","E","c","e","dayperiod","era","LITERAL","addLiteral","parts","value","lastPart","length","pattern","push","isHour12","splitDateFormat","format","locale","info","lastIndex","match","exec","index","substring","startsWith","specifier","part","hour12","names","patternLength","nameType"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-intl/dist/es/dates/split-date-format.js"],"sourcesContent":["import { DEFAULT_LOCALE } from '../common/constants';\nimport isNumber from '../common/is-number';\nimport datePattern from './date-pattern';\nimport dateNameType from './date-name-type';\nimport { dateFormatRegExp, DATE_FIELD_MAP } from './constants';\nimport { localeInfo } from '../cldr';\n\nvar NAME_TYPES = {\n    month: {\n        type: 'months',\n        minLength: 3,\n        standAlone: 'L'\n    },\n\n    quarter: {\n        type: 'quarters',\n        minLength: 3,\n        standAlone: 'q'\n    },\n\n    weekday: {\n        type: 'days',\n        minLength: {\n            E: 0,\n            c: 3,\n            e: 3\n        },\n        standAlone: 'c'\n    },\n\n    dayperiod: {\n        type: 'dayPeriods',\n        minLength: 0\n    },\n\n    era: {\n        type: 'eras',\n        minLength: 0\n    }\n};\n\nvar LITERAL = 'literal';\n\nfunction addLiteral(parts, value) {\n    var lastPart = parts[parts.length - 1];\n    if (lastPart && lastPart.type === LITERAL) {\n        lastPart.pattern += value;\n    } else {\n        parts.push({\n            type: LITERAL,\n            pattern: value\n        });\n    }\n}\n\nfunction isHour12(pattern) {\n    return pattern === 'h' || pattern === 'K';\n}\n\nexport default function splitDateFormat(format, locale) {\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\n\n    var info = localeInfo(locale);\n    var pattern = datePattern(format, info);\n    var parts = [];\n    var lastIndex = dateFormatRegExp.lastIndex = 0;\n    var match = dateFormatRegExp.exec(pattern);\n\n    while (match) {\n        var value = match[0];\n\n        if (lastIndex < match.index) {\n            addLiteral(parts, pattern.substring(lastIndex, match.index));\n        }\n\n        if (value.startsWith('\"') || value.startsWith(\"'\")) {\n            addLiteral(parts, value);\n        } else {\n            var specifier = value[0];\n            var type = DATE_FIELD_MAP[specifier];\n            var part = {\n                type: type,\n                pattern: value\n            };\n\n            if (type === 'hour') {\n                part.hour12 = isHour12(value);\n            }\n\n            var names = NAME_TYPES[type];\n\n            if (names) {\n                var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];\n                var patternLength = value.length;\n\n                if (patternLength >= minLength) {\n                    part.names = {\n                        type: names.type,\n                        nameType: dateNameType(patternLength),\n                        standAlone: names.standAlone === specifier\n                    };\n                }\n            }\n\n            parts.push(part);\n        }\n\n        lastIndex = dateFormatRegExp.lastIndex;\n        match = dateFormatRegExp.exec(pattern);\n    }\n\n    if (lastIndex < pattern.length) {\n        addLiteral(parts, pattern.substring(lastIndex));\n    }\n\n    return parts;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}