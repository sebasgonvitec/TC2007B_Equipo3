{"ast":null,"code":"import toCubicPolynomial from './to-cubic-polynomial';\nimport solveCubicEquation from './solve-cubic-equation';\nimport calculateCurveAt from './calculate-curve-at';\nimport close from './close';\nexport default function curveIntersectionsCount(points, point, bbox) {\n  var polynomial = toCubicPolynomial(points, \"x\");\n  var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point.x);\n  var rayIntersection, intersectsRay;\n  var count = 0;\n\n  for (var i = 0; i < roots.length; i++) {\n    rayIntersection = calculateCurveAt(roots[i], \"y\", points);\n    intersectsRay = close(rayIntersection, point.y) || rayIntersection > point.y;\n\n    if (intersectsRay && ((roots[i] === 0 || roots[i] === 1) && bbox.bottomRight().x > point.x || 0 < roots[i] && roots[i] < 1)) {\n      count++;\n    }\n  }\n\n  return count;\n}","map":{"version":3,"names":["toCubicPolynomial","solveCubicEquation","calculateCurveAt","close","curveIntersectionsCount","points","point","bbox","polynomial","roots","x","rayIntersection","intersectsRay","count","i","length","y","bottomRight"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-drawing/dist/es/geometry/math/curve-intersections-count.js"],"sourcesContent":["import toCubicPolynomial from './to-cubic-polynomial';\nimport solveCubicEquation from './solve-cubic-equation';\nimport calculateCurveAt from './calculate-curve-at';\nimport close from './close';\n\nexport default function curveIntersectionsCount(points, point, bbox) {\n    var polynomial = toCubicPolynomial(points, \"x\");\n    var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point.x);\n    var rayIntersection, intersectsRay;\n    var count = 0;\n    for (var i = 0; i < roots.length; i++) {\n        rayIntersection = calculateCurveAt(roots[i], \"y\", points);\n        intersectsRay = close(rayIntersection, point.y) || rayIntersection > point.y;\n        if (intersectsRay && (((roots[i] === 0 || roots[i] === 1) && bbox.bottomRight().x > point.x) || (0 < roots[i] && roots[i] < 1))) {\n            count++;\n        }\n    }\n\n    return count;\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,IAAhD,EAAsD;EACjE,IAAIC,UAAU,GAAGR,iBAAiB,CAACK,MAAD,EAAS,GAAT,CAAlC;EACA,IAAII,KAAK,GAAGR,kBAAkB,CAACO,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAA1B,EAA+BA,UAAU,CAAC,CAAD,CAAzC,EAA8CA,UAAU,CAAC,CAAD,CAAV,GAAgBF,KAAK,CAACI,CAApE,CAA9B;EACA,IAAIC,eAAJ,EAAqBC,aAArB;EACA,IAAIC,KAAK,GAAG,CAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACnCH,eAAe,GAAGT,gBAAgB,CAACO,KAAK,CAACK,CAAD,CAAN,EAAW,GAAX,EAAgBT,MAAhB,CAAlC;IACAO,aAAa,GAAGT,KAAK,CAACQ,eAAD,EAAkBL,KAAK,CAACU,CAAxB,CAAL,IAAmCL,eAAe,GAAGL,KAAK,CAACU,CAA3E;;IACA,IAAIJ,aAAa,KAAM,CAACH,KAAK,CAACK,CAAD,CAAL,KAAa,CAAb,IAAkBL,KAAK,CAACK,CAAD,CAAL,KAAa,CAAhC,KAAsCP,IAAI,CAACU,WAAL,GAAmBP,CAAnB,GAAuBJ,KAAK,CAACI,CAApE,IAA2E,IAAID,KAAK,CAACK,CAAD,CAAT,IAAgBL,KAAK,CAACK,CAAD,CAAL,GAAW,CAA3G,CAAjB,EAAiI;MAC7HD,KAAK;IACR;EACJ;;EAED,OAAOA,KAAP;AACH"},"metadata":{},"sourceType":"module"}