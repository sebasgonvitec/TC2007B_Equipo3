{"ast":null,"code":"import alignPoint from './align-point';\nimport collision from './collision';\n\nvar fit = function (position, size, viewPortSize) {\n  var output = 0;\n\n  if (position + size > viewPortSize) {\n    output = viewPortSize - (position + size);\n  }\n\n  if (position < 0) {\n    output = -position;\n  }\n\n  return output;\n};\n\nvar flip = function (ref) {\n  var offset = ref.offset;\n  var size = ref.size;\n  var anchorSize = ref.anchorSize;\n  var viewPortSize = ref.viewPortSize;\n  var anchorAlignPoint = ref.anchorAlignPoint;\n  var elementAlignPoint = ref.elementAlignPoint;\n  var margin = ref.margin;\n  var output = 0;\n  var isPositionCentered = elementAlignPoint === alignPoint.center || elementAlignPoint === alignPoint.middle;\n  var isOriginCentered = anchorAlignPoint === alignPoint.center || anchorAlignPoint === alignPoint.middle;\n  var marginToAdd = 2 * margin; //2x to keep margin after flip\n\n  if (elementAlignPoint !== anchorAlignPoint && !isPositionCentered && !isOriginCentered) {\n    var isBeforeAnchor = anchorAlignPoint === alignPoint.top || anchorAlignPoint === alignPoint.left;\n\n    if (offset < 0 && isBeforeAnchor) {\n      output = size + anchorSize + marginToAdd;\n\n      if (offset + output + size > viewPortSize) {\n        output = 0; //skip flip\n      }\n    } else if (offset >= 0 && !isBeforeAnchor) {\n      if (offset + size > viewPortSize) {\n        output += -(anchorSize + size + marginToAdd);\n      }\n\n      if (offset + output < 0) {\n        output = 0; //skip flip\n      }\n    }\n  }\n\n  return output;\n};\n\nvar restrictToView = function (options) {\n  var anchorRect = options.anchorRect;\n  var anchorAlign = options.anchorAlign;\n  var elementRect = options.elementRect;\n  var elementAlign = options.elementAlign;\n  var collisions = options.collisions;\n  var viewPort = options.viewPort;\n  var margin = options.margin;\n  if (margin === void 0) margin = {};\n  var elementTop = elementRect.top;\n  var elementLeft = elementRect.left;\n  var elementHeight = elementRect.height;\n  var elementWidth = elementRect.width;\n  var viewPortHeight = viewPort.height;\n  var viewPortWidth = viewPort.width;\n  var horizontalMargin = margin.horizontal || 0;\n  var verticalMargin = margin.vertical || 0;\n  var left = 0;\n  var top = 0;\n  var isVerticalFit = collisions.vertical === collision.fit;\n  var isHorizontalFit = collisions.horizontal === collision.fit;\n  var isVerticalFlip = collisions.vertical === collision.flip;\n  var isHorizontalFlip = collisions.horizontal === collision.flip;\n\n  if (isVerticalFit) {\n    top += fit(elementTop, elementHeight, viewPortHeight);\n  }\n\n  if (isHorizontalFit) {\n    left += fit(elementLeft, elementWidth, viewPortWidth);\n  }\n\n  if (isVerticalFlip) {\n    top += flip({\n      margin: verticalMargin,\n      offset: elementTop,\n      size: elementHeight,\n      anchorSize: anchorRect.height,\n      viewPortSize: viewPortHeight,\n      anchorAlignPoint: anchorAlign.vertical,\n      elementAlignPoint: elementAlign.vertical\n    });\n  }\n\n  if (isHorizontalFlip) {\n    left += flip({\n      margin: horizontalMargin,\n      offset: elementLeft,\n      size: elementWidth,\n      anchorSize: anchorRect.width,\n      viewPortSize: viewPortWidth,\n      anchorAlignPoint: anchorAlign.horizontal,\n      elementAlignPoint: elementAlign.horizontal\n    });\n  }\n\n  var flippedVertical = isVerticalFlip && top !== 0;\n  var flippedHorizontal = isHorizontalFlip && left !== 0;\n  var fittedVertical = isVerticalFit && top !== 0;\n  var fittedHorizontal = isHorizontalFit && left !== 0;\n  return {\n    flipped: flippedHorizontal || flippedVertical,\n    fitted: fittedVertical || fittedHorizontal,\n    flip: {\n      horizontal: flippedHorizontal,\n      vertical: flippedVertical\n    },\n    fit: {\n      horizontal: fittedHorizontal,\n      vertical: fittedVertical\n    },\n    offset: {\n      left: left,\n      top: top\n    }\n  };\n};\n\nexport default restrictToView;","map":{"version":3,"names":["alignPoint","collision","fit","position","size","viewPortSize","output","flip","ref","offset","anchorSize","anchorAlignPoint","elementAlignPoint","margin","isPositionCentered","center","middle","isOriginCentered","marginToAdd","isBeforeAnchor","top","left","restrictToView","options","anchorRect","anchorAlign","elementRect","elementAlign","collisions","viewPort","elementTop","elementLeft","elementHeight","height","elementWidth","width","viewPortHeight","viewPortWidth","horizontalMargin","horizontal","verticalMargin","vertical","isVerticalFit","isHorizontalFit","isVerticalFlip","isHorizontalFlip","flippedVertical","flippedHorizontal","fittedVertical","fittedHorizontal","flipped","fitted"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-popup-common/dist/es/restrict-to-view.js"],"sourcesContent":["import alignPoint from './align-point';\nimport collision from './collision';\n\nvar fit = function(position, size, viewPortSize) {\n    var output = 0;\n\n    if (position + size > viewPortSize) {\n        output = viewPortSize - (position + size);\n    }\n\n    if (position < 0) {\n        output = -position;\n    }\n\n    return output;\n};\n\nvar flip = function(ref) {\n    var offset = ref.offset;\n    var size = ref.size;\n    var anchorSize = ref.anchorSize;\n    var viewPortSize = ref.viewPortSize;\n    var anchorAlignPoint = ref.anchorAlignPoint;\n    var elementAlignPoint = ref.elementAlignPoint;\n    var margin = ref.margin;\n\n    var output = 0;\n\n    var isPositionCentered = elementAlignPoint === alignPoint.center || elementAlignPoint === alignPoint.middle;\n    var isOriginCentered = anchorAlignPoint === alignPoint.center || anchorAlignPoint === alignPoint.middle;\n    var marginToAdd = 2 * margin; //2x to keep margin after flip\n\n    if (elementAlignPoint !== anchorAlignPoint && !isPositionCentered && !isOriginCentered) {\n        var isBeforeAnchor = anchorAlignPoint === alignPoint.top || anchorAlignPoint === alignPoint.left;\n        if (offset < 0 && isBeforeAnchor) {\n            output = size + anchorSize + marginToAdd;\n            if (offset + output + size > viewPortSize) {\n                output = 0; //skip flip\n            }\n        } else if (offset >= 0 && !isBeforeAnchor) {\n            if (offset + size > viewPortSize) {\n                output += -(anchorSize + size + marginToAdd);\n            }\n\n            if (offset + output < 0) {\n                output = 0; //skip flip\n            }\n        }\n    }\n\n    return output;\n};\n\nvar restrictToView = function (options) {\n    var anchorRect = options.anchorRect;\n    var anchorAlign = options.anchorAlign;\n    var elementRect = options.elementRect;\n    var elementAlign = options.elementAlign;\n    var collisions = options.collisions;\n    var viewPort = options.viewPort;\n    var margin = options.margin; if ( margin === void 0 ) margin = {};\n    var elementTop = elementRect.top;\n    var elementLeft = elementRect.left;\n    var elementHeight = elementRect.height;\n    var elementWidth = elementRect.width;\n    var viewPortHeight = viewPort.height;\n    var viewPortWidth = viewPort.width;\n    var horizontalMargin = margin.horizontal || 0;\n    var verticalMargin = margin.vertical || 0;\n\n    var left = 0;\n    var top = 0;\n\n    var isVerticalFit = collisions.vertical === collision.fit;\n    var isHorizontalFit = collisions.horizontal === collision.fit;\n    var isVerticalFlip = collisions.vertical === collision.flip;\n    var isHorizontalFlip = collisions.horizontal === collision.flip;\n\n    if (isVerticalFit) {\n        top += fit(elementTop, elementHeight, viewPortHeight);\n    }\n\n    if (isHorizontalFit) {\n        left += fit(elementLeft, elementWidth, viewPortWidth);\n    }\n\n    if (isVerticalFlip) {\n        top += flip({\n            margin: verticalMargin,\n            offset: elementTop,\n            size: elementHeight,\n            anchorSize: anchorRect.height,\n            viewPortSize: viewPortHeight,\n            anchorAlignPoint: anchorAlign.vertical,\n            elementAlignPoint: elementAlign.vertical\n        });\n    }\n\n    if (isHorizontalFlip) {\n        left += flip({\n            margin: horizontalMargin,\n            offset: elementLeft,\n            size: elementWidth,\n            anchorSize: anchorRect.width,\n            viewPortSize: viewPortWidth,\n            anchorAlignPoint: anchorAlign.horizontal,\n            elementAlignPoint: elementAlign.horizontal\n        });\n    }\n\n    var flippedVertical = isVerticalFlip && top !== 0;\n    var flippedHorizontal = isHorizontalFlip && left !== 0;\n    var fittedVertical = isVerticalFit && top !== 0;\n    var fittedHorizontal = isHorizontalFit && left !== 0;\n\n    return {\n        flipped: flippedHorizontal || flippedVertical,\n        fitted: fittedVertical || fittedHorizontal,\n        flip: {\n            horizontal: flippedHorizontal,\n            vertical: flippedVertical\n        },\n        fit: {\n            horizontal: fittedHorizontal,\n            vertical: fittedVertical\n        },\n        offset: {\n            left: left,\n            top: top\n        }\n    };\n};\n\nexport default restrictToView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}