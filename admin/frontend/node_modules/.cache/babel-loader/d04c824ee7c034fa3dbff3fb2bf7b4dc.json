{"ast":null,"code":"import LinearGradient from '../gradients/linear-gradient';\nimport RadialGradient from '../gradients/radial-gradient';\nimport LinearGradientNode from './linear-gradient-node';\nimport RadialGradientNode from './radial-gradient-node';\nimport Node from './node';\nimport ClipNode from './clip-node';\n\nvar DefinitionNode = function (Node) {\n  function DefinitionNode() {\n    Node.call(this);\n    this.definitionMap = {};\n  }\n\n  if (Node) DefinitionNode.__proto__ = Node;\n  DefinitionNode.prototype = Object.create(Node && Node.prototype);\n  DefinitionNode.prototype.constructor = DefinitionNode;\n\n  DefinitionNode.prototype.attachTo = function attachTo(domElement) {\n    this.element = domElement;\n  };\n\n  DefinitionNode.prototype.template = function template() {\n    return \"<defs>\" + this.renderChildren() + \"</defs>\";\n  };\n\n  DefinitionNode.prototype.definitionChange = function definitionChange(e) {\n    var definitions = e.definitions;\n    var action = e.action;\n\n    if (action === \"add\") {\n      this.addDefinitions(definitions);\n    } else if (action === \"remove\") {\n      this.removeDefinitions(definitions);\n    }\n  };\n\n  DefinitionNode.prototype.createDefinition = function createDefinition(type, item) {\n    var nodeType;\n\n    if (type === \"clip\") {\n      nodeType = ClipNode;\n    } else if (type === \"fill\") {\n      if (item instanceof LinearGradient) {\n        nodeType = LinearGradientNode;\n      } else if (item instanceof RadialGradient) {\n        nodeType = RadialGradientNode;\n      }\n    }\n\n    return new nodeType(item);\n  };\n\n  DefinitionNode.prototype.addDefinitions = function addDefinitions(definitions) {\n    var this$1 = this;\n\n    for (var field in definitions) {\n      this$1.addDefinition(field, definitions[field]);\n    }\n  };\n\n  DefinitionNode.prototype.addDefinition = function addDefinition(type, srcElement) {\n    var ref = this;\n    var element = ref.element;\n    var definitionMap = ref.definitionMap;\n    var id = srcElement.id;\n    var mapItem = definitionMap[id];\n\n    if (!mapItem) {\n      var node = this.createDefinition(type, srcElement);\n      definitionMap[id] = {\n        element: node,\n        count: 1\n      };\n      this.append(node);\n\n      if (element) {\n        node.attachTo(this.element);\n      }\n    } else {\n      mapItem.count++;\n    }\n  };\n\n  DefinitionNode.prototype.removeDefinitions = function removeDefinitions(definitions) {\n    var this$1 = this;\n\n    for (var field in definitions) {\n      this$1.removeDefinition(definitions[field]);\n    }\n  };\n\n  DefinitionNode.prototype.removeDefinition = function removeDefinition(srcElement) {\n    var definitionMap = this.definitionMap;\n    var id = srcElement.id;\n    var mapItem = definitionMap[id];\n\n    if (mapItem) {\n      mapItem.count--;\n\n      if (mapItem.count === 0) {\n        this.remove(this.childNodes.indexOf(mapItem.element), 1);\n        delete definitionMap[id];\n      }\n    }\n  };\n\n  return DefinitionNode;\n}(Node);\n\nexport default DefinitionNode;","map":{"version":3,"names":["LinearGradient","RadialGradient","LinearGradientNode","RadialGradientNode","Node","ClipNode","DefinitionNode","call","definitionMap","__proto__","prototype","Object","create","constructor","attachTo","domElement","element","template","renderChildren","definitionChange","e","definitions","action","addDefinitions","removeDefinitions","createDefinition","type","item","nodeType","this$1","field","addDefinition","srcElement","ref","id","mapItem","node","count","append","removeDefinition","remove","childNodes","indexOf"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-drawing/dist/es/svg/definition-node.js"],"sourcesContent":["import LinearGradient from '../gradients/linear-gradient';\nimport RadialGradient from '../gradients/radial-gradient';\nimport LinearGradientNode from './linear-gradient-node';\nimport RadialGradientNode from './radial-gradient-node';\nimport Node from './node';\nimport ClipNode from './clip-node';\n\nvar DefinitionNode = (function (Node) {\n    function DefinitionNode() {\n        Node.call(this);\n        this.definitionMap = {};\n    }\n\n    if ( Node ) DefinitionNode.__proto__ = Node;\n    DefinitionNode.prototype = Object.create( Node && Node.prototype );\n    DefinitionNode.prototype.constructor = DefinitionNode;\n\n    DefinitionNode.prototype.attachTo = function attachTo (domElement) {\n        this.element = domElement;\n    };\n\n    DefinitionNode.prototype.template = function template () {\n        return (\"<defs>\" + (this.renderChildren()) + \"</defs>\");\n    };\n\n    DefinitionNode.prototype.definitionChange = function definitionChange (e) {\n        var definitions = e.definitions;\n        var action = e.action;\n\n        if (action === \"add\") {\n            this.addDefinitions(definitions);\n        } else if (action === \"remove\") {\n            this.removeDefinitions(definitions);\n        }\n    };\n\n    DefinitionNode.prototype.createDefinition = function createDefinition (type, item) {\n        var nodeType;\n        if (type === \"clip\") {\n            nodeType = ClipNode;\n        } else if (type === \"fill\") {\n            if (item instanceof LinearGradient) {\n                nodeType = LinearGradientNode;\n            } else if (item instanceof RadialGradient) {\n                nodeType = RadialGradientNode;\n            }\n        }\n        return new nodeType(item);\n    };\n\n    DefinitionNode.prototype.addDefinitions = function addDefinitions (definitions) {\n        var this$1 = this;\n\n        for (var field in definitions) {\n            this$1.addDefinition(field, definitions[field]);\n        }\n    };\n\n    DefinitionNode.prototype.addDefinition = function addDefinition (type, srcElement) {\n        var ref = this;\n        var element = ref.element;\n        var definitionMap = ref.definitionMap;\n        var id = srcElement.id;\n        var mapItem = definitionMap[id];\n        if (!mapItem) {\n            var node = this.createDefinition(type, srcElement);\n            definitionMap[id] = {\n                element: node,\n                count: 1\n            };\n            this.append(node);\n            if (element) {\n                node.attachTo(this.element);\n            }\n        } else {\n            mapItem.count++;\n        }\n    };\n\n    DefinitionNode.prototype.removeDefinitions = function removeDefinitions (definitions) {\n        var this$1 = this;\n\n        for (var field in definitions) {\n            this$1.removeDefinition(definitions[field]);\n        }\n    };\n\n    DefinitionNode.prototype.removeDefinition = function removeDefinition (srcElement) {\n        var definitionMap = this.definitionMap;\n        var id = srcElement.id;\n        var mapItem = definitionMap[id];\n\n        if (mapItem) {\n            mapItem.count--;\n            if (mapItem.count === 0) {\n                this.remove(this.childNodes.indexOf(mapItem.element), 1);\n                delete definitionMap[id];\n            }\n        }\n    };\n\n    return DefinitionNode;\n}(Node));\n\nexport default DefinitionNode;"],"mappings":"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"},"metadata":{},"sourceType":"module"}