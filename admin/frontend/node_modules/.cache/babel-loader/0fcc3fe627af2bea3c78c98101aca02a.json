{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asana\\\\Documents\\\\TEC\\\\Semestre 5\\\\Seguridad_Informatica\\\\ModuloReact\\\\demo\\\\frontend\\\\src\\\\components\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport \"@progress/kendo-theme-material/dist/all.css\";\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\"; // import { process } from \"@progress/kendo-data-query\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URI = 'http://localhost:1337/';\n\nconst ShowSearch = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []); //Funcion para obtener los datos de la DB\n\n  const getData = async () => {\n    const res = await axios.get(URI);\n    setData(res.data);\n  }; // const [dataState, setDataState] = React.useState({ skip: 0, take: 10 })\n  // const [result, setResult] = React.useState(process(data, dataState));\n  // const onDataStateChange = (event) => {\n  //     setDataState(event.dataState);\n  //     setResult(process(data, event.dataState));\n  // }\n\n\n  const [skip, setSkip] = React.useState(0);\n  const [take, setTake] = React.useState(10);\n\n  const onPageChange = event => {\n    setSkip(event.page.skip);\n    setTake(event.page.take);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    data: data.slice(skip, skip + take) // ilterable={true}\n    ,\n    onDataStateChange: onPageChange,\n    pageable: true,\n    total: data.length // {...dataState}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"nombre\",\n      title: \"Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"numero\",\n      title: \"N\\xFAmero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"expediente\",\n      title: \"Expediente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"actor\",\n      title: \"Actor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n      field: \"estatus\",\n      title: \"Estatus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this); // return(\n  //     <table>\n  //         <thead>\n  //             <tr>\n  //                 <th>nombre</th>\n  //                 <th>numero</th>\n  //                 <th>expediente</th>\n  //             </tr>\n  //         </thead>\n  //         <tbody>\n  //             {data.map ((row) => (\n  //                 <tr key={row.id}>\n  //                     <td> {row.nombre} </td>\n  //                     <td> {row.numero} </td>\n  //                     <td> {row.expediente} </td>\n  //                 </tr>\n  //             ))}\n  //         </tbody>\n  //     </table>\n  // )\n};\n\n_s(ShowSearch, \"jsB3WvgjKsZtKFFo2z0sZZIon0A=\");\n\n_c = ShowSearch;\nexport default ShowSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowSearch\");","map":{"version":3,"names":["axios","React","useState","useEffect","Grid","GridColumn","URI","ShowSearch","data","setData","getData","res","get","skip","setSkip","take","setTake","onPageChange","event","page","slice","length"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/src/components/search.js"],"sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\r\n// import { process } from \"@progress/kendo-data-query\";\r\n\r\nconst URI = 'http://localhost:1337/'\r\n\r\nconst ShowSearch = () => {\r\n   \r\n    const [data, setData] = useState([]);\r\n    useEffect( () => {\r\n        getData()\r\n    }, [])\r\n\r\n    //Funcion para obtener los datos de la DB\r\n    const getData = async () => {\r\n        const res = await axios.get(URI)\r\n        setData(res.data)\r\n    }\r\n\r\n    // const [dataState, setDataState] = React.useState({ skip: 0, take: 10 })\r\n    // const [result, setResult] = React.useState(process(data, dataState));\r\n\r\n    // const onDataStateChange = (event) => {\r\n    //     setDataState(event.dataState);\r\n    //     setResult(process(data, event.dataState));\r\n    // }\r\n\r\n    const [skip, setSkip] = React.useState(0);\r\n    const [take, setTake] = React.useState(10);\r\n\r\n    const onPageChange = (event) => {\r\n        setSkip(event.page.skip);\r\n        setTake(event.page.take);\r\n    }\r\n\r\n\r\n    return(\r\n        <Grid\r\n            data={data.slice(skip, skip + take)}\r\n            // ilterable={true}\r\n            onDataStateChange={onPageChange}\r\n            pageable={true}\r\n            total={data.length}\r\n            // {...dataState}\r\n        >\r\n            <GridColumn field=\"nombre\" title=\"Nombre\" />\r\n            <GridColumn field=\"numero\" title=\"NÃºmero\" />\r\n            <GridColumn field=\"expediente\" title=\"Expediente\" />\r\n            <GridColumn field=\"actor\" title=\"Actor\" />\r\n            <GridColumn field=\"estatus\" title=\"Estatus\"/>\r\n\r\n        </Grid>   \r\n    );\r\n\r\n\r\n    // return(\r\n    //     <table>\r\n    //         <thead>\r\n    //             <tr>\r\n    //                 <th>nombre</th>\r\n    //                 <th>numero</th>\r\n    //                 <th>expediente</th>\r\n    //             </tr>\r\n                \r\n    //         </thead>\r\n    //         <tbody>\r\n    //             {data.map ((row) => (\r\n    //                 <tr key={row.id}>\r\n    //                     <td> {row.nombre} </td>\r\n    //                     <td> {row.numero} </td>\r\n    //                     <td> {row.expediente} </td>\r\n    //                 </tr>\r\n\r\n    //             ))}\r\n\r\n    //         </tbody>\r\n    //     </table>\r\n\r\n    // )\r\n}\r\n\r\nexport default ShowSearch;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,6CAAP;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,4BAAjC,C,CACA;;;AAEA,MAAMC,GAAG,GAAG,wBAAZ;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAErB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EACAC,SAAS,CAAE,MAAM;IACbO,OAAO;EACV,CAFQ,EAEN,EAFM,CAAT,CAHqB,CAOrB;;EACA,MAAMA,OAAO,GAAG,YAAY;IACxB,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUN,GAAV,CAAlB;IACAG,OAAO,CAACE,GAAG,CAACH,IAAL,CAAP;EACH,CAHD,CARqB,CAarB;EACA;EAEA;EACA;EACA;EACA;;;EAEA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACC,QAAN,CAAe,CAAf,CAAxB;EACA,MAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;;EAEA,MAAMe,YAAY,GAAIC,KAAD,IAAW;IAC5BJ,OAAO,CAACI,KAAK,CAACC,IAAN,CAAWN,IAAZ,CAAP;IACAG,OAAO,CAACE,KAAK,CAACC,IAAN,CAAWJ,IAAZ,CAAP;EACH,CAHD;;EAMA,oBACI,QAAC,IAAD;IACI,IAAI,EAAEP,IAAI,CAACY,KAAL,CAAWP,IAAX,EAAiBA,IAAI,GAAGE,IAAxB,CADV,CAEI;IAFJ;IAGI,iBAAiB,EAAEE,YAHvB;IAII,QAAQ,EAAE,IAJd;IAKI,KAAK,EAAET,IAAI,CAACa,MALhB,CAMI;IANJ;IAAA,wBAQI,QAAC,UAAD;MAAY,KAAK,EAAC,QAAlB;MAA2B,KAAK,EAAC;IAAjC;MAAA;MAAA;MAAA;IAAA,QARJ,eASI,QAAC,UAAD;MAAY,KAAK,EAAC,QAAlB;MAA2B,KAAK,EAAC;IAAjC;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI,QAAC,UAAD;MAAY,KAAK,EAAC,YAAlB;MAA+B,KAAK,EAAC;IAArC;MAAA;MAAA;MAAA;IAAA,QAVJ,eAWI,QAAC,UAAD;MAAY,KAAK,EAAC,OAAlB;MAA0B,KAAK,EAAC;IAAhC;MAAA;MAAA;MAAA;IAAA,QAXJ,eAYI,QAAC,UAAD;MAAY,KAAK,EAAC,SAAlB;MAA4B,KAAK,EAAC;IAAlC;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ,CA9BqB,CAiDrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EAEA;AACH,CAzED;;GAAMd,U;;KAAAA,U;AA2EN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}