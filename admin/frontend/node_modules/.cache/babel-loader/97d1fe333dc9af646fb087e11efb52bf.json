{"ast":null,"code":"import { isPresent } from '../utils';\nimport { compose } from '../funcs'; // tslint:enable:max-line-length\n\nvar set = function (field, target, value) {\n  target[field] = value;\n  return target;\n};\n\nvar toCamelCase = function (str) {\n  return str.replace(/(^[A-Z])/g, function (_, g1) {\n    return g1.toLowerCase();\n  });\n};\n\nvar prop = function (fieldName) {\n  return function (obj) {\n    var value = obj[fieldName];\n\n    if (isPresent(value)) {\n      return value;\n    }\n\n    return obj[toCamelCase(fieldName)];\n  };\n};\n\nvar member = prop(\"Member\");\nvar aggregateMethodName = prop(\"AggregateMethodName\");\nvar value = prop(\"Value\");\n\nvar convert = function (mapper) {\n  return function (values) {\n    return Object.keys(values).reduce(mapper.bind(null, values), {});\n  };\n};\n\nvar translateAggregate = convert(function (source, acc, field) {\n  return set(field.toLowerCase(), acc, source[field]);\n});\nvar translateAggregates = convert(function (source, acc, field) {\n  return set(field, acc, translateAggregate(source[field]));\n});\n\nvar valueOrDefault = function (value, defaultValue) {\n  return isPresent(value) ? value : defaultValue;\n};\n\nvar normalizeGroup = function (group) {\n  return {\n    aggregates: group.Aggregates || group.aggregates,\n    field: group.Member || group.member || group.field,\n    hasSubgroups: group.HasSubgroups || group.hasSubgroups || false,\n    items: group.Items || group.items,\n    value: valueOrDefault(group.Key, valueOrDefault(group.key, group.value))\n  };\n};\n\nvar translateGroup = compose(function (_a) {\n  var field = _a.field,\n      hasSubgroups = _a.hasSubgroups,\n      value = _a.value,\n      aggregates = _a.aggregates,\n      items = _a.items;\n  return {\n    aggregates: translateAggregates(aggregates),\n    field: field,\n    items: hasSubgroups ? items.map(translateGroup) : items,\n    value: value\n  };\n}, normalizeGroup); // tslint:disable:max-line-length\n\n/**\n * Converts the grouped result, which is returned into the `Data` field of the UI for ASP.NET MVC `ToDataSourceResult` method, to a comparable format.\n * @param data - The value of the `Data` field of the response.\n * @returns {GroupResult[]} - The converted result.\n */\n\nexport var translateDataSourceResultGroups = function (data) {\n  return data.map(translateGroup);\n};\n/**\n * Converts the `AggregateResults` field content, which is returned by the UI for ASP.NET MVC `ToDataSourceResult` method, to a comparable format.\n * @param data - The value of the `AggregateResults` field of the response.\n * @returns {AggregateResult} - The converted result.\n */\n// tslint:enable:max-line-length\n\nexport var translateAggregateResults = function (data) {\n  return (data || []).reduce(function (acc, x) {\n    return set(member(x), acc, set(aggregateMethodName(x).toLowerCase(), acc[member(x)] || {}, value(x)));\n  }, {});\n};","map":{"version":3,"names":["isPresent","compose","set","field","target","value","toCamelCase","str","replace","_","g1","toLowerCase","prop","fieldName","obj","member","aggregateMethodName","convert","mapper","values","Object","keys","reduce","bind","translateAggregate","source","acc","translateAggregates","valueOrDefault","defaultValue","normalizeGroup","group","aggregates","Aggregates","Member","hasSubgroups","HasSubgroups","items","Items","Key","key","translateGroup","_a","map","translateDataSourceResultGroups","data","translateAggregateResults","x"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-data-query/dist/es/mvc/deserialization.js"],"sourcesContent":["import { isPresent } from '../utils';\nimport { compose } from '../funcs';\n// tslint:enable:max-line-length\nvar set = function (field, target, value) {\n    target[field] = value;\n    return target;\n};\nvar toCamelCase = function (str) { return str.replace(/(^[A-Z])/g, function (_, g1) { return g1.toLowerCase(); }); };\nvar prop = function (fieldName) { return function (obj) {\n    var value = obj[fieldName];\n    if (isPresent(value)) {\n        return value;\n    }\n    return obj[toCamelCase(fieldName)];\n}; };\nvar member = prop(\"Member\");\nvar aggregateMethodName = prop(\"AggregateMethodName\");\nvar value = prop(\"Value\");\nvar convert = function (mapper) { return function (values) { return Object.keys(values).reduce(mapper.bind(null, values), {}); }; };\nvar translateAggregate = convert(function (source, acc, field) { return set(field.toLowerCase(), acc, source[field]); });\nvar translateAggregates = convert(function (source, acc, field) { return set(field, acc, translateAggregate(source[field])); });\nvar valueOrDefault = function (value, defaultValue) { return isPresent(value) ? value : defaultValue; };\nvar normalizeGroup = function (group) { return ({\n    aggregates: group.Aggregates || group.aggregates,\n    field: group.Member || group.member || group.field,\n    hasSubgroups: group.HasSubgroups || group.hasSubgroups || false,\n    items: group.Items || group.items,\n    value: valueOrDefault(group.Key, valueOrDefault(group.key, group.value))\n}); };\nvar translateGroup = compose(function (_a) {\n    var field = _a.field, hasSubgroups = _a.hasSubgroups, value = _a.value, aggregates = _a.aggregates, items = _a.items;\n    return ({\n        aggregates: translateAggregates(aggregates),\n        field: field,\n        items: hasSubgroups ? items.map(translateGroup) : items,\n        value: value\n    });\n}, normalizeGroup);\n// tslint:disable:max-line-length\n/**\n * Converts the grouped result, which is returned into the `Data` field of the UI for ASP.NET MVC `ToDataSourceResult` method, to a comparable format.\n * @param data - The value of the `Data` field of the response.\n * @returns {GroupResult[]} - The converted result.\n */\nexport var translateDataSourceResultGroups = function (data) { return data.map(translateGroup); };\n/**\n * Converts the `AggregateResults` field content, which is returned by the UI for ASP.NET MVC `ToDataSourceResult` method, to a comparable format.\n * @param data - The value of the `AggregateResults` field of the response.\n * @returns {AggregateResult} - The converted result.\n */\n// tslint:enable:max-line-length\nexport var translateAggregateResults = function (data) { return ((data || []).reduce(function (acc, x) { return set(member(x), acc, set(aggregateMethodName(x).toLowerCase(), acc[member(x)] || {}, value(x))); }, {})); };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}