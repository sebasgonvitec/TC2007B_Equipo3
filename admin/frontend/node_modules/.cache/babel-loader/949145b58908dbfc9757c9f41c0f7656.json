{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asana\\\\Documents\\\\TEC\\\\Semestre 5\\\\Seguridad_Informatica\\\\ModuloReact\\\\Admin\\\\frontend\\\\src\\\\components\\\\accountsTable.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport \"@progress/kendo-theme-material/dist/all.css\";\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\nimport { process } from \"@progress/kendo-data-query\";\nimport { IntlProvider, LocalizationProvider, loadMessages } from \"@progress/kendo-react-intl\";\nimport esMessages from \"../language/es.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URI = 'http://localhost:1337/tablaCuentas';\n\nconst AccountsTable = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []); //Funcion para obtener los datos de la DB\n\n  const getData = async () => {\n    const res = await axios.get(URI);\n    setData(res.data);\n  }; //Estados de la data en la tabla al momento de utilizar filtros\n\n\n  const [dataState, setDataState] = React.useState();\n  const [result, setResult] = React.useState(data);\n  console.log(result);\n  useEffect(() => {\n    setResult(data);\n  }, [data]);\n\n  const onDataStateChange = event => {\n    setDataState(event.dataState);\n    setResult(process(data, event.dataState));\n  }; //Personalizar filtros para la tabla\n\n\n  const filterOperators = {\n    text: [{\n      text: 'grid.filterContainsOperator',\n      operator: 'contains',\n      messages: 'heey'\n    }, {\n      text: 'grid.filterNotContainsOperator',\n      operator: 'doesnotcontain'\n    }, {\n      text: 'grid.filterEqOperator',\n      operator: 'eq'\n    }, {\n      text: 'grid.filterNotEqOperator',\n      operator: 'neq'\n    }, {\n      text: 'grid.filterStartsWithOperator',\n      operator: 'startswith'\n    }, {\n      text: 'grid.filterEndsWithOperator',\n      operator: 'endswith'\n    } // { text: 'grid.filterIsNullOperator', operator: 'isnull' },\n    // { text: 'grid.filterIsNotNullOperator', operator: 'isnotnull' },\n    // { text: 'grid.filterIsEmptyOperator', operator: 'isempty' },\n    // { text: 'grid.filterIsNotEmptyOperator', operator: 'isnotempty' }\n    ],\n    numeric: [{\n      text: 'grid.filterEqOperator',\n      operator: 'eq'\n    }, {\n      text: 'grid.filterNotEqOperator',\n      operator: 'neq'\n    }, {\n      text: 'grid.filterGteOperator',\n      operator: 'gte'\n    }, {\n      text: 'grid.filterGtOperator',\n      operator: 'gt'\n    }, {\n      text: 'grid.filterLteOperator',\n      operator: 'lte'\n    }, {\n      text: 'grid.filterLtOperator',\n      operator: 'lt'\n    }, {\n      text: 'grid.filterIsNullOperator',\n      operator: 'isnull'\n    }, {\n      text: 'grid.filterIsNotNullOperator',\n      operator: 'isnotnull'\n    }],\n    date: [{\n      text: 'grid.filterEqOperator',\n      operator: 'eq'\n    }, {\n      text: 'grid.filterNotEqOperator',\n      operator: 'neq'\n    }, {\n      text: 'grid.filterAfterOrEqualOperator',\n      operator: 'gte'\n    }, {\n      text: 'grid.filterAfterOperator',\n      operator: 'gt'\n    }, {\n      text: 'grid.filterBeforeOperator',\n      operator: 'lt'\n    }, {\n      text: 'grid.filterBeforeOrEqualOperator',\n      operator: 'lte'\n    }, {\n      text: 'grid.filterIsNullOperator',\n      operator: 'isnull'\n    }, {\n      text: 'grid.filterIsNotNullOperator',\n      operator: 'isnotnull'\n    }],\n    boolean: [{\n      text: \"grid.filterEqOperator\",\n      operator: \"eq\"\n    }]\n  }; //cargar los mensajes/etiquetas para filtros en espaÃ±ol\n\n  loadMessages(esMessages, \"es-ES\"); // Componente de boton para editar cuenta\n\n  const EditButton = props => {\n    const {\n      dataItem\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n        },\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }; // Componente de boton para editar cuenta\n\n\n  const DeleteButton = props => {\n    const {\n      dataItem\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n        },\n        children: \"Borrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    language: \"es-ES\",\n    children: /*#__PURE__*/_jsxDEV(IntlProvider, {\n      locale: \"es\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        data: result,\n        filterable: true,\n        onDataStateChange: onDataStateChange,\n        filterOperators: filterOperators,\n        ...dataState,\n        children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n          field: \"usuario\",\n          title: \"Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          field: \"nombre\",\n          title: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          field: \"area\",\n          title: \"Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          field: \"nulidad\",\n          title: \"Juicios de Nulidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          field: \"investigacion\",\n          title: \"Carpetas de Investigacion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          field: \"otros\",\n          title: \"Expedientes Otros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          title: \"Editar Usuario\",\n          width: \"300px\",\n          filterable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n          title: \"Borrar Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AccountsTable, \"iZ4lmdqyft8Pxjd5ku9X8svfm7w=\");\n\n_c = AccountsTable;\nexport default AccountsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountsTable\");","map":{"version":3,"names":["axios","React","useState","useEffect","Grid","GridColumn","process","IntlProvider","LocalizationProvider","loadMessages","esMessages","URI","AccountsTable","data","setData","getData","res","get","dataState","setDataState","result","setResult","console","log","onDataStateChange","event","filterOperators","text","operator","messages","numeric","date","boolean","EditButton","props","dataItem","e","preventDefault","DeleteButton"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/src/components/accountsTable.js"],"sourcesContent":["import axios from 'axios'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport {IntlProvider, LocalizationProvider,loadMessages} from \"@progress/kendo-react-intl\";\r\nimport esMessages from \"../language/es.json\";\r\n\r\nconst URI = 'http://localhost:1337/tablaCuentas'\r\n\r\nconst AccountsTable = () => {\r\n   \r\n    const [data, setData] = useState([]);\r\n    useEffect( () => {\r\n        getData()\r\n    }, [])\r\n\r\n    //Funcion para obtener los datos de la DB\r\n    const getData = async () => {\r\n        const res = await axios.get(URI)\r\n        setData(res.data)\r\n    }\r\n\r\n    //Estados de la data en la tabla al momento de utilizar filtros\r\n    const [dataState, setDataState] = React.useState()\r\n    const [result, setResult] = React.useState(data);\r\n    console.log(result)\r\n    useEffect(() => { setResult(data)}, [data] )\r\n   \r\n\r\n    const onDataStateChange = (event) => {\r\n        setDataState(event.dataState);\r\n        setResult(process(data, event.dataState));\r\n    }\r\n\r\n    //Personalizar filtros para la tabla\r\n    const filterOperators = {\r\n        text: [\r\n            { text: 'grid.filterContainsOperator', operator: 'contains', messages:'heey' },\r\n            { text: 'grid.filterNotContainsOperator', operator: 'doesnotcontain' },\r\n            { text: 'grid.filterEqOperator', operator: 'eq' },\r\n            { text: 'grid.filterNotEqOperator', operator: 'neq' },\r\n            { text: 'grid.filterStartsWithOperator', operator: 'startswith' },\r\n            { text: 'grid.filterEndsWithOperator', operator: 'endswith' },\r\n            // { text: 'grid.filterIsNullOperator', operator: 'isnull' },\r\n            // { text: 'grid.filterIsNotNullOperator', operator: 'isnotnull' },\r\n            // { text: 'grid.filterIsEmptyOperator', operator: 'isempty' },\r\n            // { text: 'grid.filterIsNotEmptyOperator', operator: 'isnotempty' }\r\n        ],\r\n        numeric: [\r\n            { text: 'grid.filterEqOperator', operator: 'eq' },\r\n            { text: 'grid.filterNotEqOperator', operator: 'neq' },\r\n            { text: 'grid.filterGteOperator', operator: 'gte' },\r\n            { text: 'grid.filterGtOperator', operator: 'gt' },\r\n            { text: 'grid.filterLteOperator', operator: 'lte' },\r\n            { text: 'grid.filterLtOperator', operator: 'lt' },\r\n            { text: 'grid.filterIsNullOperator', operator: 'isnull' },\r\n            { text: 'grid.filterIsNotNullOperator', operator: 'isnotnull' }\r\n        ],\r\n        date: [\r\n            { text: 'grid.filterEqOperator', operator: 'eq' },\r\n            { text: 'grid.filterNotEqOperator', operator: 'neq' },\r\n            { text: 'grid.filterAfterOrEqualOperator', operator: 'gte' },\r\n            { text: 'grid.filterAfterOperator', operator: 'gt' },\r\n            { text: 'grid.filterBeforeOperator', operator: 'lt' },\r\n            { text: 'grid.filterBeforeOrEqualOperator', operator: 'lte' },\r\n            { text: 'grid.filterIsNullOperator', operator: 'isnull' },\r\n            { text: 'grid.filterIsNotNullOperator', operator: 'isnotnull' }\r\n        ],\r\n        boolean: [\r\n          {text: \"grid.filterEqOperator\", operator: \"eq\"}\r\n        ],\r\n      };\r\n\r\n      \r\n    //cargar los mensajes/etiquetas para filtros en espaÃ±ol\r\n    loadMessages(esMessages, \"es-ES\"); \r\n\r\n    // Componente de boton para editar cuenta\r\n    const EditButton = (props) => {\r\n        const { dataItem } = props;\r\n        return(\r\n            <td>\r\n                <button onClick={(e) => {e.preventDefault()}}>Editar</button>\r\n            </td>\r\n        );\r\n    };\r\n\r\n    // Componente de boton para editar cuenta\r\n    const DeleteButton = (props) => {\r\n        const { dataItem } = props;\r\n        return(\r\n            <td>\r\n                <button onClick={(e) => {e.preventDefault()}}>Borrar</button>\r\n            </td>\r\n        );\r\n    };\r\n\r\n\r\n    return(\r\n        <LocalizationProvider language=\"es-ES\"> \r\n            <IntlProvider locale=\"es\">\r\n\r\n                <Grid\r\n                    data={result}\r\n                    filterable={true}\r\n                    onDataStateChange={onDataStateChange}\r\n                    filterOperators={filterOperators}\r\n                    {...dataState}\r\n                \r\n                >\r\n                    <GridColumn field=\"usuario\" title=\"Usuario\" />\r\n                    <GridColumn field=\"nombre\" title=\"Nombre\" />\r\n                    <GridColumn field=\"area\" title=\"Area\" />\r\n                    <GridColumn field=\"nulidad\" title=\"Juicios de Nulidad\"/>\r\n                    <GridColumn field=\"investigacion\" title=\"Carpetas de Investigacion\"/>\r\n                    <GridColumn field=\"otros\" title=\"Expedientes Otros\"/>\r\n                    <GridColumn title=\"Editar Usuario\" width=\"300px\" filterable={false}/>\r\n                    <GridColumn title=\"Borrar Usuario\"/>\r\n\r\n                </Grid>   \r\n            </IntlProvider>\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n\r\nexport default AccountsTable;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}