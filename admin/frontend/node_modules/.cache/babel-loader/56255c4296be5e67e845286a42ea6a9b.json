{"ast":null,"code":"import { cldr } from './info';\nimport { CURRENCY, ACCOUNTING, DECIMAL, CURRENCY_PLACEHOLDER, NUMBER_PLACEHOLDER, LIST_SEPARATOR, GROUP_SEPARATOR, POINT } from '../common/constants';\nvar LATIN_NUMBER_FORMATS = \"Formats-numberSystem-latn\";\nvar LATIN_NUMBER_SYMBOLS = \"symbols-numberSystem-latn\";\nvar patternRegExp = /([#,0.]+)/g;\nvar cldrCurrencyRegExp = /¤/g;\n\nfunction getPatterns(pattern) {\n  patternRegExp.lastIndex = 0;\n  return pattern.replace(cldrCurrencyRegExp, CURRENCY_PLACEHOLDER).replace(patternRegExp, NUMBER_PLACEHOLDER).split(LIST_SEPARATOR);\n}\n\nfunction getGroupSize(pattern) {\n  patternRegExp.lastIndex = 0;\n  var numberPatterns = patternRegExp.exec(pattern.split(LIST_SEPARATOR)[0])[0].split(POINT);\n  var integer = numberPatterns[0];\n  var groupSize = integer.split(GROUP_SEPARATOR).slice(1).map(function (group) {\n    return group.length;\n  }).reverse();\n  return groupSize;\n}\n\nfunction loadCurrencyUnitPatterns(currencyInfo, currencyFormats) {\n  for (var field in currencyFormats) {\n    if (field.startsWith(\"unitPattern\")) {\n      currencyInfo[field] = currencyFormats[field].replace(\"{0}\", NUMBER_PLACEHOLDER).replace(\"{1}\", CURRENCY_PLACEHOLDER);\n    }\n  }\n}\n\nexport default function loadNumbersInfo(locale, info) {\n  var localeInfo = cldr[locale];\n  var numbers = localeInfo.numbers = localeInfo.numbers || {};\n  numbers.symbols = numbers.symbols || {};\n\n  for (var field in info) {\n    if (field === LATIN_NUMBER_SYMBOLS) {\n      Object.assign(numbers.symbols, info[field]);\n    } else if (field.includes(LATIN_NUMBER_FORMATS)) {\n      var style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS));\n      var pattern = info[field].standard;\n      numbers[style] = {\n        patterns: getPatterns(pattern)\n      };\n\n      if (style === CURRENCY) {\n        numbers[style].groupSize = getGroupSize((info[DECIMAL + LATIN_NUMBER_FORMATS] || info[field]).standard);\n        loadCurrencyUnitPatterns(numbers[style], info[field]);\n        numbers[ACCOUNTING] = {\n          patterns: getPatterns(info[field][ACCOUNTING]),\n          groupSize: numbers[style].groupSize\n        };\n      } else {\n        numbers[style].groupSize = getGroupSize(pattern);\n      }\n    } else if (field === \"currencies\") {\n      numbers.currencies = info[field];\n    }\n  }\n}","map":{"version":3,"names":["cldr","CURRENCY","ACCOUNTING","DECIMAL","CURRENCY_PLACEHOLDER","NUMBER_PLACEHOLDER","LIST_SEPARATOR","GROUP_SEPARATOR","POINT","LATIN_NUMBER_FORMATS","LATIN_NUMBER_SYMBOLS","patternRegExp","cldrCurrencyRegExp","getPatterns","pattern","lastIndex","replace","split","getGroupSize","numberPatterns","exec","integer","groupSize","slice","map","group","length","reverse","loadCurrencyUnitPatterns","currencyInfo","currencyFormats","field","startsWith","loadNumbersInfo","locale","info","localeInfo","numbers","symbols","Object","assign","includes","style","substr","indexOf","standard","patterns","currencies"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-intl/dist/es/cldr/load-numbers.js"],"sourcesContent":["import { cldr } from './info';\nimport { CURRENCY, ACCOUNTING, DECIMAL, CURRENCY_PLACEHOLDER, NUMBER_PLACEHOLDER, LIST_SEPARATOR, GROUP_SEPARATOR, POINT } from '../common/constants';\n\nvar LATIN_NUMBER_FORMATS = \"Formats-numberSystem-latn\";\nvar LATIN_NUMBER_SYMBOLS = \"symbols-numberSystem-latn\";\n\nvar patternRegExp = /([#,0.]+)/g;\nvar cldrCurrencyRegExp = /¤/g;\n\nfunction getPatterns(pattern) {\n    patternRegExp.lastIndex = 0;\n\n    return pattern.replace(cldrCurrencyRegExp, CURRENCY_PLACEHOLDER).replace(patternRegExp, NUMBER_PLACEHOLDER).split(LIST_SEPARATOR);\n}\n\nfunction getGroupSize(pattern) {\n    patternRegExp.lastIndex = 0;\n\n    var numberPatterns = patternRegExp.exec(pattern.split(LIST_SEPARATOR)[0])[0].split(POINT);\n    var integer = numberPatterns[0];\n\n    var groupSize = integer.split(GROUP_SEPARATOR).slice(1).map(function(group) {\n        return group.length;\n    }).reverse();\n\n    return groupSize;\n}\n\nfunction loadCurrencyUnitPatterns(currencyInfo, currencyFormats) {\n    for (var field in currencyFormats) {\n        if (field.startsWith(\"unitPattern\")) {\n            currencyInfo[field] = currencyFormats[field].replace(\"{0}\", NUMBER_PLACEHOLDER).replace(\"{1}\", CURRENCY_PLACEHOLDER);\n        }\n    }\n}\n\nexport default function loadNumbersInfo(locale, info) {\n    var localeInfo = cldr[locale];\n    var numbers = localeInfo.numbers = localeInfo.numbers || {};\n    numbers.symbols = numbers.symbols || {};\n    for (var field in info) {\n        if (field === LATIN_NUMBER_SYMBOLS) {\n            Object.assign(numbers.symbols, info[field]);\n        } else if (field.includes(LATIN_NUMBER_FORMATS)) {\n            var style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS));\n            var pattern = info[field].standard;\n            numbers[style] = {\n                patterns: getPatterns(pattern)\n            };\n            if (style === CURRENCY) {\n                numbers[style].groupSize = getGroupSize((info[DECIMAL + LATIN_NUMBER_FORMATS] || info[field]).standard);\n                loadCurrencyUnitPatterns(numbers[style], info[field]);\n                numbers[ACCOUNTING] = {\n                    patterns: getPatterns(info[field][ACCOUNTING]),\n                    groupSize: numbers[style].groupSize\n                };\n            } else {\n                numbers[style].groupSize = getGroupSize(pattern);\n            }\n        } else if (field === \"currencies\") {\n            numbers.currencies = info[field];\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}