{"ast":null,"code":"/**\n * @hidden\n */\nexport var defaultFormat = 'd';\n/**\n * @hidden\n */\n\nexport var defaultFormatPlaceholder = 'wide';\n/**\n * @hidden\n */\n\nexport var padZero = function (length) {\n  return new Array(Math.max(length, 0)).fill('0').join('');\n};\n/**\n * @hidden\n */\n\nexport var approximateStringMatching = function (oldTextOrigin, oldFormat, newTextOrigin, selectionStart) {\n  /*\n    Remove the right part of the cursor.\n    oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n  */\n  var oldTextSeparator = oldTextOrigin[selectionStart + oldTextOrigin.length - newTextOrigin.length];\n  var oldText = oldTextOrigin.substring(0, selectionStart + oldTextOrigin.length - newTextOrigin.length);\n  var newText = newTextOrigin.substring(0, selectionStart);\n  var diff = [];\n  /* Handle the typing of a single character over the same selection. */\n\n  if (oldText === newText && selectionStart > 0) {\n    diff.push([oldFormat[selectionStart - 1], newText[selectionStart - 1]]);\n    return diff;\n  }\n\n  if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n    /* Handle Delete/Backspace. */\n    var deletedSymbol = '';\n    /*\n        The whole text is replaced by the same character.\n        A nasty patch is required to keep the selection in the first segment.\n    */\n\n    if (newText.length === 1) {\n      diff.push([oldFormat[0], newText[0]]);\n    }\n\n    for (var i = newText.length; i < oldText.length; i++) {\n      if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== '_') {\n        deletedSymbol = oldFormat[i];\n        diff.push([deletedSymbol, '']);\n      }\n    }\n\n    return diff;\n  }\n  /*\n      Handle the insertion of the text (the new text is longer than the previous one).\n      Handle the typing over a literal as well.\n  */\n\n\n  if (newText.indexOf(oldText) === 0 || oldFormat[selectionStart - 1] === '_') {\n    var symbol = oldFormat[0];\n\n    for (var i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n      if (oldFormat[i] !== '_') {\n        symbol = oldFormat[i];\n        break;\n      }\n    }\n\n    return [[symbol, newText[selectionStart - 1]]];\n  }\n  /* Handle the entering of a space or a separator for navigating to the next item. */\n\n\n  if (newText[newText.length - 1] === ' ' || newText[newText.length - 1] === oldTextSeparator) {\n    return [[oldFormat[selectionStart - 1], '_']];\n  }\n  /* Handle typing over a correctly selected part. */\n\n\n  return [[oldFormat[selectionStart - 1], newText[selectionStart - 1]]];\n};\n/**\n * @hidden\n */\n\nexport var dateSymbolMap = function (map, part) {\n  map[part.pattern[0]] = part.type;\n  return map;\n};\n/**\n * @hidden\n */\n\nexport var isInRange = function (candidate, min, max) {\n  return candidate === null || !(min && min > candidate || max && max < candidate);\n};\n/**\n * @hidden\n */\n\nexport var invalidClasses = ['k-invalid'];\n/** @hidden */\n\nexport var wrapperClasses = ['k-widget', 'k-dateinput'];","map":{"version":3,"names":["defaultFormat","defaultFormatPlaceholder","padZero","length","Array","Math","max","fill","join","approximateStringMatching","oldTextOrigin","oldFormat","newTextOrigin","selectionStart","oldTextSeparator","oldText","substring","newText","diff","push","indexOf","deletedSymbol","i","symbol","dateSymbolMap","map","part","pattern","type","isInRange","candidate","min","invalidClasses","wrapperClasses"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-react-dateinputs/dist/es/dateinput/utils.js"],"sourcesContent":["/**\n * @hidden\n */\nexport var defaultFormat = 'd';\n/**\n * @hidden\n */\nexport var defaultFormatPlaceholder = 'wide';\n/**\n * @hidden\n */\nexport var padZero = function (length) { return new Array(Math.max(length, 0)).fill('0').join(''); };\n/**\n * @hidden\n */\nexport var approximateStringMatching = function (oldTextOrigin, oldFormat, newTextOrigin, selectionStart) {\n    /*\n      Remove the right part of the cursor.\n      oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n    */\n    var oldTextSeparator = oldTextOrigin[selectionStart + oldTextOrigin.length - newTextOrigin.length];\n    var oldText = oldTextOrigin.substring(0, selectionStart + oldTextOrigin.length - newTextOrigin.length);\n    var newText = newTextOrigin.substring(0, selectionStart);\n    var diff = [];\n    /* Handle the typing of a single character over the same selection. */\n    if (oldText === newText && selectionStart > 0) {\n        diff.push([oldFormat[selectionStart - 1], newText[selectionStart - 1]]);\n        return diff;\n    }\n    if (oldText.indexOf(newText) === 0 &&\n        (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n        /* Handle Delete/Backspace. */\n        var deletedSymbol = '';\n        /*\n            The whole text is replaced by the same character.\n            A nasty patch is required to keep the selection in the first segment.\n        */\n        if (newText.length === 1) {\n            diff.push([oldFormat[0], newText[0]]);\n        }\n        for (var i = newText.length; i < oldText.length; i++) {\n            if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== '_') {\n                deletedSymbol = oldFormat[i];\n                diff.push([deletedSymbol, '']);\n            }\n        }\n        return diff;\n    }\n    /*\n        Handle the insertion of the text (the new text is longer than the previous one).\n        Handle the typing over a literal as well.\n    */\n    if (newText.indexOf(oldText) === 0 || oldFormat[selectionStart - 1] === '_') {\n        var symbol = oldFormat[0];\n        for (var i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n            if (oldFormat[i] !== '_') {\n                symbol = oldFormat[i];\n                break;\n            }\n        }\n        return [[symbol, newText[selectionStart - 1]]];\n    }\n    /* Handle the entering of a space or a separator for navigating to the next item. */\n    if (newText[newText.length - 1] === ' ' || newText[newText.length - 1] === oldTextSeparator) {\n        return [[oldFormat[selectionStart - 1], '_']];\n    }\n    /* Handle typing over a correctly selected part. */\n    return [[oldFormat[selectionStart - 1], newText[selectionStart - 1]]];\n};\n/**\n * @hidden\n */\nexport var dateSymbolMap = function (map, part) { map[part.pattern[0]] = part.type; return map; };\n/**\n * @hidden\n */\nexport var isInRange = function (candidate, min, max) { return (candidate === null || !((min && min > candidate) || (max && max < candidate))); };\n/**\n * @hidden\n */\nexport var invalidClasses = ['k-invalid'];\n/** @hidden */\nexport var wrapperClasses = ['k-widget', 'k-dateinput'];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}