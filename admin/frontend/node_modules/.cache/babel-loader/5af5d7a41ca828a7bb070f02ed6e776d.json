{"ast":null,"code":"/* eslint-disable key-spacing,no-multi-spaces,no-param-reassign */\nvar literals = {\n  1: \"i\",\n  10: \"x\",\n  100: \"c\",\n  2: \"ii\",\n  20: \"xx\",\n  200: \"cc\",\n  3: \"iii\",\n  30: \"xxx\",\n  300: \"ccc\",\n  4: \"iv\",\n  40: \"xl\",\n  400: \"cd\",\n  5: \"v\",\n  50: \"l\",\n  500: \"d\",\n  6: \"vi\",\n  60: \"lx\",\n  600: \"dc\",\n  7: \"vii\",\n  70: \"lxx\",\n  700: \"dcc\",\n  8: \"viii\",\n  80: \"lxxx\",\n  800: \"dccc\",\n  9: \"ix\",\n  90: \"xc\",\n  900: \"cm\",\n  1000: \"m\"\n};\nexport default function arabicToRoman(n) {\n  var values = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n  var roman = \"\";\n\n  while (n > 0) {\n    if (n < values[0]) {\n      values.shift();\n    } else {\n      roman += literals[values[0]];\n      n -= values[0];\n    }\n  }\n\n  return roman;\n}","map":{"version":3,"names":["literals","arabicToRoman","n","values","roman","shift"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-drawing/dist/es/util/arabic-to-roman.js"],"sourcesContent":["/* eslint-disable key-spacing,no-multi-spaces,no-param-reassign */\n\nvar literals = {\n    1    : \"i\",       10   : \"x\",       100  : \"c\",\n    2    : \"ii\",      20   : \"xx\",      200  : \"cc\",\n    3    : \"iii\",     30   : \"xxx\",     300  : \"ccc\",\n    4    : \"iv\",      40   : \"xl\",      400  : \"cd\",\n    5    : \"v\",       50   : \"l\",       500  : \"d\",\n    6    : \"vi\",      60   : \"lx\",      600  : \"dc\",\n    7    : \"vii\",     70   : \"lxx\",     700  : \"dcc\",\n    8    : \"viii\",    80   : \"lxxx\",    800  : \"dccc\",\n    9    : \"ix\",      90   : \"xc\",      900  : \"cm\",\n    1000 : \"m\"\n};\n\nexport default function arabicToRoman(n) {\n    var values = [ 1000,\n                   900 , 800, 700, 600, 500, 400, 300, 200, 100,\n                   90  , 80 , 70 , 60 , 50 , 40 , 30 , 20 , 10 ,\n                   9   , 8  , 7  , 6  , 5  , 4  , 3  , 2  , 1 ];\n\n    var roman = \"\";\n    while (n > 0) {\n        if (n < values[0]) {\n            values.shift();\n        } else {\n            roman += literals[values[0]];\n            n -= values[0];\n        }\n    }\n    return roman;\n}"],"mappings":"AAAA;AAEA,IAAIA,QAAQ,GAAG;EACX,GAAO,GADI;EACO,IAAO,GADd;EACyB,KAAO,GADhC;EAEX,GAAO,IAFI;EAEO,IAAO,IAFd;EAEyB,KAAO,IAFhC;EAGX,GAAO,KAHI;EAGO,IAAO,KAHd;EAGyB,KAAO,KAHhC;EAIX,GAAO,IAJI;EAIO,IAAO,IAJd;EAIyB,KAAO,IAJhC;EAKX,GAAO,GALI;EAKO,IAAO,GALd;EAKyB,KAAO,GALhC;EAMX,GAAO,IANI;EAMO,IAAO,IANd;EAMyB,KAAO,IANhC;EAOX,GAAO,KAPI;EAOO,IAAO,KAPd;EAOyB,KAAO,KAPhC;EAQX,GAAO,MARI;EAQO,IAAO,MARd;EAQyB,KAAO,MARhC;EASX,GAAO,IATI;EASO,IAAO,IATd;EASyB,KAAO,IAThC;EAUX,MAAO;AAVI,CAAf;AAaA,eAAe,SAASC,aAAT,CAAuBC,CAAvB,EAA0B;EACrC,IAAIC,MAAM,GAAG,CAAE,IAAF,EACE,GADF,EACQ,GADR,EACa,GADb,EACkB,GADlB,EACuB,GADvB,EAC4B,GAD5B,EACiC,GADjC,EACsC,GADtC,EAC2C,GAD3C,EAEE,EAFF,EAEQ,EAFR,EAEa,EAFb,EAEkB,EAFlB,EAEuB,EAFvB,EAE4B,EAF5B,EAEiC,EAFjC,EAEsC,EAFtC,EAE2C,EAF3C,EAGE,CAHF,EAGQ,CAHR,EAGa,CAHb,EAGkB,CAHlB,EAGuB,CAHvB,EAG4B,CAH5B,EAGiC,CAHjC,EAGsC,CAHtC,EAG2C,CAH3C,CAAb;EAKA,IAAIC,KAAK,GAAG,EAAZ;;EACA,OAAOF,CAAC,GAAG,CAAX,EAAc;IACV,IAAIA,CAAC,GAAGC,MAAM,CAAC,CAAD,CAAd,EAAmB;MACfA,MAAM,CAACE,KAAP;IACH,CAFD,MAEO;MACHD,KAAK,IAAIJ,QAAQ,CAACG,MAAM,CAAC,CAAD,CAAP,CAAjB;MACAD,CAAC,IAAIC,MAAM,CAAC,CAAD,CAAX;IACH;EACJ;;EACD,OAAOC,KAAP;AACH"},"metadata":{},"sourceType":"module"}