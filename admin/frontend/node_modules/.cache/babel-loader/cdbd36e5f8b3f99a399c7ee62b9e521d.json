{"ast":null,"code":"import Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementPadding, elementScale, elementSize, elementOffset } from '../util';\nvar events = [\"click\", \"mouseenter\", \"mouseleave\", \"mousemove\", \"resize\"];\n\nvar Surface = function (Observable) {\n  function Surface(element, options) {\n    Observable.call(this);\n    this.options = Object.assign({}, options);\n    this.element = element;\n    this.element._kendoExportVisual = this.exportVisual.bind(this);\n    this._click = this._handler(\"click\");\n    this._mouseenter = this._handler(\"mouseenter\");\n    this._mouseleave = this._handler(\"mouseleave\");\n    this._mousemove = this._handler(\"mousemove\");\n    this._visual = new Group();\n    elementSize(element, this.options);\n    this.bind(events, this.options);\n\n    this._enableTracking();\n  }\n\n  if (Observable) Surface.__proto__ = Observable;\n  Surface.prototype = Object.create(Observable && Observable.prototype);\n  Surface.prototype.constructor = Surface;\n\n  Surface.prototype.draw = function draw(element) {\n    this._visual.children.push(element);\n  };\n\n  Surface.prototype.clear = function clear() {\n    this._visual.children = [];\n  };\n\n  Surface.prototype.destroy = function destroy() {\n    this._visual = null;\n    this.element._kendoExportVisual = null;\n    this.unbind();\n  };\n\n  Surface.prototype.eventTarget = function eventTarget(e) {\n    var this$1 = this;\n    var domNode = eventElement(e);\n    var node;\n\n    while (!node && domNode) {\n      node = domNode._kendoNode;\n\n      if (domNode === this$1.element) {\n        break;\n      }\n\n      domNode = domNode.parentElement;\n    }\n\n    if (node) {\n      return node.srcElement;\n    }\n  };\n\n  Surface.prototype.exportVisual = function exportVisual() {\n    return this._visual;\n  };\n\n  Surface.prototype.getSize = function getSize() {\n    return elementSize(this.element);\n  };\n\n  Surface.prototype.currentSize = function currentSize(size) {\n    if (size) {\n      this._size = size;\n    } else {\n      return this._size;\n    }\n  };\n\n  Surface.prototype.setSize = function setSize(size) {\n    elementSize(this.element, size);\n    this.currentSize(size);\n\n    this._resize();\n  };\n\n  Surface.prototype.resize = function resize(force) {\n    var size = this.getSize();\n    var currentSize = this.currentSize();\n\n    if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n      this.currentSize(size);\n\n      this._resize(size, force);\n\n      this.trigger(\"resize\", size);\n    }\n  };\n\n  Surface.prototype.size = function size(value) {\n    if (!value) {\n      return this.getSize();\n    }\n\n    this.setSize(value);\n  };\n\n  Surface.prototype.suspendTracking = function suspendTracking() {\n    this._suspendedTracking = true;\n  };\n\n  Surface.prototype.resumeTracking = function resumeTracking() {\n    this._suspendedTracking = false;\n  };\n\n  Surface.prototype._enableTracking = function _enableTracking() {};\n\n  Surface.prototype._resize = function _resize() {};\n\n  Surface.prototype._handler = function _handler(eventName) {\n    var this$1 = this;\n    return function (e) {\n      var node = this$1.eventTarget(e);\n\n      if (node && !this$1._suspendedTracking) {\n        this$1.trigger(eventName, {\n          element: node,\n          originalEvent: e,\n          type: eventName\n        });\n      }\n    };\n  };\n\n  Surface.prototype._elementOffset = function _elementOffset() {\n    var element = this.element;\n    var padding = elementPadding(element);\n    var ref = elementOffset(element);\n    var left = ref.left;\n    var top = ref.top;\n    return {\n      left: left + padding.left,\n      top: top + padding.top\n    };\n  };\n\n  Surface.prototype._surfacePoint = function _surfacePoint(e) {\n    var offset = this._elementOffset();\n\n    var coord = eventCoordinates(e);\n    var x = coord.x - offset.left;\n    var y = coord.y - offset.top;\n    var inverseTransform = elementScale(this.element).invert();\n    var point = new Point(x, y).transform(inverseTransform);\n    return point;\n  };\n\n  return Surface;\n}(Observable);\n\nexport default Surface;","map":{"version":3,"names":["Group","Point","Observable","eventElement","eventCoordinates","elementPadding","elementScale","elementSize","elementOffset","events","Surface","element","options","call","Object","assign","_kendoExportVisual","exportVisual","bind","_click","_handler","_mouseenter","_mouseleave","_mousemove","_visual","_enableTracking","__proto__","prototype","create","constructor","draw","children","push","clear","destroy","unbind","eventTarget","e","this$1","domNode","node","_kendoNode","parentElement","srcElement","getSize","currentSize","size","_size","setSize","_resize","resize","force","width","height","trigger","value","suspendTracking","_suspendedTracking","resumeTracking","eventName","originalEvent","type","_elementOffset","padding","ref","left","top","_surfacePoint","offset","coord","x","y","inverseTransform","invert","point","transform"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/Admin/frontend/node_modules/@progress/kendo-drawing/dist/es/core/surface.js"],"sourcesContent":["import Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementPadding, elementScale, elementSize, elementOffset } from '../util';\n\nvar events = [\n    \"click\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"mousemove\",\n    \"resize\"\n];\n\nvar Surface = (function (Observable) {\n    function Surface(element, options) {\n        Observable.call(this);\n\n        this.options = Object.assign({}, options);\n        this.element = element;\n        this.element._kendoExportVisual = this.exportVisual.bind(this);\n\n        this._click = this._handler(\"click\");\n        this._mouseenter = this._handler(\"mouseenter\");\n        this._mouseleave = this._handler(\"mouseleave\");\n        this._mousemove = this._handler(\"mousemove\");\n\n        this._visual = new Group();\n\n        elementSize(element, this.options);\n\n        this.bind(events, this.options);\n\n        this._enableTracking();\n    }\n\n    if ( Observable ) Surface.__proto__ = Observable;\n    Surface.prototype = Object.create( Observable && Observable.prototype );\n    Surface.prototype.constructor = Surface;\n\n    Surface.prototype.draw = function draw (element) {\n        this._visual.children.push(element);\n    };\n\n    Surface.prototype.clear = function clear () {\n        this._visual.children = [];\n    };\n\n    Surface.prototype.destroy = function destroy () {\n        this._visual = null;\n        this.element._kendoExportVisual = null;\n        this.unbind();\n    };\n\n    Surface.prototype.eventTarget = function eventTarget (e) {\n        var this$1 = this;\n\n        var domNode = eventElement(e);\n        var node;\n\n        while (!node && domNode) {\n            node = domNode._kendoNode;\n            if (domNode === this$1.element) {\n                break;\n            }\n\n            domNode = domNode.parentElement;\n        }\n\n        if (node) {\n            return node.srcElement;\n        }\n    };\n\n    Surface.prototype.exportVisual = function exportVisual () {\n        return this._visual;\n    };\n\n    Surface.prototype.getSize = function getSize () {\n        return elementSize(this.element);\n    };\n\n    Surface.prototype.currentSize = function currentSize (size) {\n        if (size) {\n            this._size = size;\n        } else {\n            return this._size;\n        }\n    };\n\n    Surface.prototype.setSize = function setSize (size) {\n        elementSize(this.element, size);\n\n        this.currentSize(size);\n        this._resize();\n    };\n\n    Surface.prototype.resize = function resize (force) {\n        var size = this.getSize();\n        var currentSize = this.currentSize();\n\n        if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n            this.currentSize(size);\n            this._resize(size, force);\n            this.trigger(\"resize\", size);\n        }\n    };\n\n    Surface.prototype.size = function size (value) {\n        if (!value) {\n            return this.getSize();\n        }\n\n        this.setSize(value);\n    };\n\n    Surface.prototype.suspendTracking = function suspendTracking () {\n        this._suspendedTracking = true;\n    };\n\n    Surface.prototype.resumeTracking = function resumeTracking () {\n        this._suspendedTracking = false;\n    };\n\n    Surface.prototype._enableTracking = function _enableTracking () {};\n\n    Surface.prototype._resize = function _resize () {};\n\n    Surface.prototype._handler = function _handler (eventName) {\n        var this$1 = this;\n\n        return function (e) {\n            var node = this$1.eventTarget(e);\n            if (node && !this$1._suspendedTracking) {\n                this$1.trigger(eventName, {\n                    element: node,\n                    originalEvent: e,\n                    type: eventName\n                });\n            }\n        };\n    };\n\n    Surface.prototype._elementOffset = function _elementOffset () {\n        var element = this.element;\n        var padding = elementPadding(element);\n        var ref = elementOffset(element);\n        var left = ref.left;\n        var top = ref.top;\n\n        return {\n            left: left + padding.left,\n            top: top + padding.top\n        };\n    };\n\n    Surface.prototype._surfacePoint = function _surfacePoint (e) {\n        var offset = this._elementOffset();\n        var coord = eventCoordinates(e);\n        var x = coord.x - offset.left;\n        var y = coord.y - offset.top;\n\n        var inverseTransform = elementScale(this.element).invert();\n        var point = new Point(\n            x,\n            y\n        ).transform(inverseTransform);\n\n        return point;\n    };\n\n    return Surface;\n}(Observable));\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}