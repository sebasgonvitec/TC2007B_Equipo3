{"ast":null,"code":"import { fieldList } from './fieldList';\nvar setterCache = {};\n\nsetterCache.undefined = function (obj) {\n  return obj;\n};\n\nvar defaultValue = function (nextField, options) {\n  return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n};\n/**\n * Can be used for setting value to object using field path. For example `users[index].name`.\n *\n * @example\n * ```jsx-no-run\n * const values = {users:[{lastName: 'Doe'}]};\n * const firstUserFirstName = setter('user[0].firstName');\n *\n * firstUserFirstName(values, 'John');\n *\n * console.log(values)\n *\n * // result: {users:[{firstName: 'John', lastName: 'Doe'}]}\n * ```\n */\n\n\nexport function setter(field) {\n  if (setterCache[field]) {\n    return setterCache[field];\n  }\n\n  var fields = fieldList(field);\n\n  setterCache[field] = function (obj, value, options) {\n    var root = obj;\n    var depth = fields.length - 1;\n\n    for (var idx = 0; idx < depth && root; idx++) {\n      root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n    }\n\n    root[fields[depth]] = value;\n  };\n\n  return setterCache[field];\n}","map":{"version":3,"names":["fieldList","setterCache","undefined","obj","defaultValue","nextField","options","arrays","isNaN","Number","setter","field","fields","value","root","depth","length","idx"],"sources":["C:/Users/asana/Documents/TEC/Semestre 5/Seguridad_Informatica/ModuloReact/demo/frontend/node_modules/@progress/kendo-react-common/dist/es/setter.js"],"sourcesContent":["import { fieldList } from './fieldList';\nvar setterCache = {};\nsetterCache.undefined = function (obj) { return obj; };\nvar defaultValue = function (nextField, options) {\n    return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n};\n/**\n * Can be used for setting value to object using field path. For example `users[index].name`.\n *\n * @example\n * ```jsx-no-run\n * const values = {users:[{lastName: 'Doe'}]};\n * const firstUserFirstName = setter('user[0].firstName');\n *\n * firstUserFirstName(values, 'John');\n *\n * console.log(values)\n *\n * // result: {users:[{firstName: 'John', lastName: 'Doe'}]}\n * ```\n */\nexport function setter(field) {\n    if (setterCache[field]) {\n        return setterCache[field];\n    }\n    var fields = fieldList(field);\n    setterCache[field] = function (obj, value, options) {\n        var root = obj;\n        var depth = fields.length - 1;\n        for (var idx = 0; idx < depth && root; idx++) {\n            root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n        }\n        root[fields[depth]] = value;\n    };\n    return setterCache[field];\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,IAAIC,WAAW,GAAG,EAAlB;;AACAA,WAAW,CAACC,SAAZ,GAAwB,UAAUC,GAAV,EAAe;EAAE,OAAOA,GAAP;AAAa,CAAtD;;AACA,IAAIC,YAAY,GAAG,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;EAC7C,OAAOA,OAAO,IAAIA,OAAO,CAACC,MAAnB,IAA6B,CAACC,KAAK,CAACC,MAAM,CAACJ,SAAD,CAAP,CAAnC,GAAyD,EAAzD,GAA8D,EAArE;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASK,MAAT,CAAgBC,KAAhB,EAAuB;EAC1B,IAAIV,WAAW,CAACU,KAAD,CAAf,EAAwB;IACpB,OAAOV,WAAW,CAACU,KAAD,CAAlB;EACH;;EACD,IAAIC,MAAM,GAAGZ,SAAS,CAACW,KAAD,CAAtB;;EACAV,WAAW,CAACU,KAAD,CAAX,GAAqB,UAAUR,GAAV,EAAeU,KAAf,EAAsBP,OAAtB,EAA+B;IAChD,IAAIQ,IAAI,GAAGX,GAAX;IACA,IAAIY,KAAK,GAAGH,MAAM,CAACI,MAAP,GAAgB,CAA5B;;IACA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGF,KAAN,IAAeD,IAAjC,EAAuCG,GAAG,EAA1C,EAA8C;MAC1CH,IAAI,GAAGA,IAAI,CAACF,MAAM,CAACK,GAAD,CAAP,CAAJ,GAAoBH,IAAI,CAACF,MAAM,CAACK,GAAD,CAAP,CAAJ,IAAqBb,YAAY,CAACQ,MAAM,CAACK,GAAG,GAAG,CAAP,CAAP,EAAkBX,OAAlB,CAA5D;IACH;;IACDQ,IAAI,CAACF,MAAM,CAACG,KAAD,CAAP,CAAJ,GAAsBF,KAAtB;EACH,CAPD;;EAQA,OAAOZ,WAAW,CAACU,KAAD,CAAlB;AACH"},"metadata":{},"sourceType":"module"}