import * as React from 'react';
import { SortDescriptor, CompositeFilterDescriptor } from '@progress/kendo-data-query';
/**
 * The props of the ColumnMenu component.
 */
export interface ColumnMenuProps {
    /**
     * The descriptors by which the data is sorted.
     */
    sort?: SortDescriptor[];
    /**
     * Fires when the sorting of the ColumnMenu is changed.
     */
    onSortChange?: (event: React.SyntheticEvent<any>, sort: SortDescriptor[], field: string) => void;
    /**
     * The descriptors by which the data is filtered.
     */
    filter?: CompositeFilterDescriptor[];
    /**
     * Fires when the ColumnMenu filter is changed.
     */
    onFilterChange?: (event: React.SyntheticEvent<any>, filter: CompositeFilterDescriptor[], field: string) => void;
    /**
     * The field to which the ColumnMenu is bound.
     */
    field?: string;
    /**
     * If set to `true`, a button for sorting in `asc` direction will be rendered.
     */
    sortAsc?: boolean;
    /**
     * If set to `true`, a button for sorting in `desc` direction will be rendered.
     */
    sortDesc?: boolean;
    /**
     * Defines the filtering UI and accepts an array with components.
     */
    filterContent?: any[];
    /**
     * Defines the initial expand state of the filters.
     * Defaults to `false`.
     */
    expandFilters?: boolean;
    /**
     * A function that returns the initial filter descriptor base on the ColumnMenu field.
     * Use it to customize the initial values of the filtering components.
     */
    initialFilter?: (field: string) => CompositeFilterDescriptor;
    /**
     * Fires when the ColumnMenu items are about to be rendered. Use it to add or remove menu items.
     * The `defaultRendering` is an array with the sorting and filtering components.
     * `props` contains the column's field and the closeMenu function which closes the ColumnMenu.
     */
    itemsRender?: (defaultRendering: (React.ReactElement<HTMLDivElement> | null)[], props: {
        field?: string;
        closeMenu: () => void;
    }) => React.ReactNode;
    /**
     * Fires when the ColumnMenu is about to be rendered. Use it to override the default rendering of the ColumnMenu.
     * The defaultRendering is an array with the button `React.ReactElement<HTMLSpanElement>` and popup `React.ReactElement<PopupProps>` components.
     */
    render?: (defaultRendering: React.ReactElement<any>[]) => React.ReactNode;
}
/**
 * The `ColumnMenuTextColumn` component. Use it for `string` type columns.
 */
export declare const ColumnMenuTextColumn: React.FunctionComponent<ColumnMenuProps>;
/**
 * The `ColumnMenuNumericColumn` component. Use it for `number` type columns.
 */
export declare const ColumnMenuNumericColumn: React.FunctionComponent<ColumnMenuProps>;
/**
 * The `ColumnMenuDateColumn` component. Use it for `Date` type columns.
 */
export declare const ColumnMenuDateColumn: React.FunctionComponent<ColumnMenuProps>;
/**
 * The `ColumnMenuBooleanColumn` component. Use it for `boolean` type columns.
 */
export declare const ColumnMenuBooleanColumn: React.FunctionComponent<ColumnMenuProps>;
