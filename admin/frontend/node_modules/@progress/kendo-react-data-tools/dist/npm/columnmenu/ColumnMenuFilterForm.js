"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColumnMenuFilterForm = exports.ColumnMenuForm = void 0;
var React = require("react");
var kendo_react_animation_1 = require("@progress/kendo-react-animation");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var ColumnMenuForm = function (props) {
    return (React.createElement("div", { className: "k-columnmenu-item-content" },
        React.createElement(kendo_react_animation_1.Reveal, { style: { position: 'relative', display: 'block' } }, props.show && (React.createElement("div", { className: "kendo-grid-filter-menu-container" },
            React.createElement("form", { className: "k-filter-menu k-group k-reset k-state-border-up", onSubmit: props.onSubmit, onReset: props.onReset },
                React.createElement("div", { className: "k-filter-menu-container" },
                    props.children,
                    React.createElement("div", { className: "k-actions k-hstack k-justify-content-stretch" }, props.actions))))))));
};
exports.ColumnMenuForm = ColumnMenuForm;
/**
 * @hidden
 */
var ColumnMenuFilterForm = function (props) {
    var localization = (0, kendo_react_intl_1.useLocalization)();
    return (React.createElement(exports.ColumnMenuForm, __assign({}, props, { actions: (React.createElement(React.Fragment, null,
            React.createElement(kendo_react_buttons_1.Button, { type: "reset" }, localization.toLanguageString(messages_1.columnMenuFilterClearButton, messages_1.messages[messages_1.columnMenuFilterClearButton])),
            React.createElement(kendo_react_buttons_1.Button, { themeColor: 'primary' }, localization.toLanguageString(messages_1.columnMenuFilterSubmitButton, messages_1.messages[messages_1.columnMenuFilterSubmitButton])))) })));
};
exports.ColumnMenuFilterForm = ColumnMenuFilterForm;
