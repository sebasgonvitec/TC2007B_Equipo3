"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterRow = exports.FILTER_ROW_CLASS = void 0;
var React = require("react");
var HeaderThElement_1 = require("./HeaderThElement");
var utils_1 = require("../navigation/utils");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
/**
 * @hidden
 */
exports.FILTER_ROW_CLASS = 'k-filter-row';
var headerCellClassName = function (sort, field, locked) {
    var result = "".concat(locked ? 'k-grid-header-sticky' : '');
    if (sort.some(function (descriptor) { return descriptor.field === field; })) {
        result += ' k-sorted';
    }
    return result;
};
/**
 * @hidden
 */
var FilterRow = function (props) {
    var columns = props.columns, filter = props.filter, filterChange = props.filterChange, _a = props.sort, sort = _a === void 0 ? [] : _a, ariaRowIndex = props.ariaRowIndex;
    var intl = (0, kendo_react_intl_1.useLocalization)();
    return (React.createElement("tr", { className: exports.FILTER_ROW_CLASS, "aria-rowindex": ariaRowIndex, role: 'row' }, columns.map(function (column, index) {
        var style = (column.locked !== undefined) ? {
            left: column.left,
            right: column.right,
            borderRightWidth: column.rightBorder ? '1px' : ''
        } : {};
        var FilterCell = column.filterCell || column.filter;
        return (React.createElement(HeaderThElement_1.HeaderThElement, { columnId: (0, utils_1.getFilterColumnId)(column.id), navigatable: column.navigatable, style: style, key: index, ariaColumnIndex: column.ariaColumnIndex, ariaLabel: FilterCell ? intl.toLanguageString(messages_1.filterAriaLabel, messages_1.messages[messages_1.filterAriaLabel]) : undefined, className: headerCellClassName(sort, column.field, column.locked) }, FilterCell && (React.createElement(FilterCell, { field: column.field, filter: filter, onFilterChange: filterChange }))));
    })));
};
exports.FilterRow = FilterRow;
