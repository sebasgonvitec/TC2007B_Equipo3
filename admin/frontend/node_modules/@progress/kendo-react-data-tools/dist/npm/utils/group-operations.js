"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setExpandedState = exports.getGroupIds = exports.setGroupIds = void 0;
var kendo_react_common_1 = require("@progress/kendo-react-common");
var GROUP_ID_FIELD = 'groupId';
var GROUP_SUBITEMS_COLLECTION = 'items';
/**
 * @hidden
 */
var setGroupId = function (group, depth, parentValue) {
    if (group.items) {
        group[GROUP_ID_FIELD] = "".concat(parentValue).concat(parentValue && '_').concat(group.value).concat(group.field);
        if (depth > 1) {
            group.items.forEach(function (item) { return setGroupId(item, depth - 1, group[GROUP_ID_FIELD]); });
        }
    }
};
/**
 * Add unique ids to the group items inside data.
 *
 * @param {{data: any[], group: GroupDescriptor[]}} options - The options to be processed.
 */
var setGroupIds = function (options) {
    var group = options.group;
    if (group && group.length && options.data) {
        return options.data.forEach(function (item) { return setGroupId(item, group.length, ''); });
    }
};
exports.setGroupIds = setGroupIds;
/**
 * Get all group ids from the data.
 *
 * @param {{data: any[]}} options - The options to be processed.
 * @returns {string[]} - Collection of all group ids from the data.
 */
var getGroupIds = function (options) {
    var groupIds = [];
    (0, kendo_react_common_1.mapTree)(options.data, GROUP_SUBITEMS_COLLECTION, function (item) {
        if (item[GROUP_ID_FIELD]) {
            groupIds.push(item[GROUP_ID_FIELD]);
        }
    });
    return groupIds;
};
exports.getGroupIds = getGroupIds;
/**
 * Apply the `expanded` prop to the group items in data based on the provided collection of group ids.
 *
 * @param {{data: any[], collapsedIds: string[]}} options - The options to be processed.
 * @returns {string[]} - Collection of all group ids from the data.
 */
var setExpandedState = function (options) {
    // TODO: no need to traverse whole tree, only group levels
    return (0, kendo_react_common_1.mapTree)(options.data, GROUP_SUBITEMS_COLLECTION, function (item) {
        return (0, kendo_react_common_1.extendDataItem)(item, GROUP_SUBITEMS_COLLECTION, {
            expanded: !options.collapsedIds.some(function (groupId) { return groupId === item[GROUP_ID_FIELD]; })
        });
    });
};
exports.setExpandedState = setExpandedState;
