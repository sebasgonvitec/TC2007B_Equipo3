import { TableKeyDownEvent, TableSelectionChangeEvent } from './events';
import { TableSelectableSettings } from './TableSelectableSettings';
/** @hidden */
export declare const closestTagName: (target: HTMLElement | null, tagName: 'TD' | 'TR' | 'TABLE') => HTMLElement | null;
/** @hidden */
export declare const getRowIndex: (element: HTMLTableRowElement) => number | undefined;
/** @hidden */
export declare const getColumnIndex: (element: HTMLTableCellElement) => number | undefined;
/**
 * @hidden
 *
 * Apply the selected field to the data items based on the selected state.
 *
 * @param {{data: any, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string; selectedField: string; subItemsField?: string; }} options
 * @returns {any[]}
 */
export declare const setSelectedState: (options: {
    data: any;
    selectedState: {
        [id: string]: boolean | number[];
    };
    dataItemKey: string;
    selectedField: string;
    subItemsField?: string | undefined;
}) => any[];
/**
 * Get selected state from the component KeyDown event.
 *
 * @param {{event: TableKeyDownEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options
 * @returns {{[id: string]: boolean | number[]}} - The new selected state.
 */
export declare const getSelectedStateFromKeyDown: (options: {
    event: TableKeyDownEvent<any>;
    selectedState: {
        [id: string]: boolean | number[];
    };
    dataItemKey: string;
}) => {
    [id: string]: boolean | number[];
};
/**
 * Get selected state from the component selection event.
 *
 * @param {{event: TableSelectionChangeEvent, selectedState:  {[id: string]: boolean | number[]}, dataItemKey: string}} options
 * @returns {{[id: string]: boolean | number[]}} - The new selected state.
 */
export declare const getSelectedState: (options: {
    event: TableSelectionChangeEvent<any>;
    selectedState: {
        [id: string]: boolean | number[];
    };
    dataItemKey: string;
}) => {
    [id: string]: boolean | number[];
};
/** @hidden */
export declare const relativeContextElement: (element: any) => any;
/** @hidden */
export declare const getOffset: (offsetParent: any) => any;
/** @hidden */
export declare const getSelectionOptions: (selectable?: TableSelectableSettings) => {
    enabled: boolean;
    drag: boolean;
    mode: import("./TableSelectableSettings").TableSelectableMode;
    cell: boolean;
};
