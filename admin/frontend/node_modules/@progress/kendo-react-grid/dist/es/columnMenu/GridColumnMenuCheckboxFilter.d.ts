import * as React from 'react';
import { CompositeFilterDescriptor } from '@progress/kendo-data-query';
import { GridColumnMenuFilterBaseProps } from '../interfaces/GridColumnMenuFilterBaseProps';
/**
 * The props of the GridColumnMenuFilter component.
 */
export interface GridColumnMenuCheckboxFilterProps extends GridColumnMenuFilterBaseProps {
    /**
     * Controls the expand state of the filter component.
     */
    expanded?: boolean;
    /**
     * Sets the items collection that will be rendered by the GridColumnMenuCheckboxFilter component.
     */
    data: Array<string | object>;
    /**
     * Triggered on each subsequent expand state of the filter component.
     */
    onExpandChange?: (nextExpandState: boolean) => void;
    /**
     * Defines the component that will be rendered as a search box.
     */
    searchBox?: React.ComponentType<any>;
    /**
     * Defines the filter operator that will be used to filter the values via the search box.
     * "startswith"
     * "endswith"
     * "contains"
     * "doesnotcontain"
     * "isempty"
     * "isnotempty"
     * "eq" (equal to)
     * "eq" (equal to)
     * "neq" (not equal to)
     * "isnull" (is equal to null)
     * "isnotnull" (is not equal to null)
     */
    searchBoxFilterOperator?: string | Function;
    /**
     * Determines if the data in the component will be unique. By default the property is set to true.
     */
    uniqueData?: boolean;
}
/**
 * @hidden
 */
export interface GridColumnMenuFilterStateProps {
    expanded: boolean;
    value: string;
    data: Array<string | object>;
    dataFromProps: Array<string | object>;
    currentFilter: CompositeFilterDescriptor;
}
export declare class GridColumnMenuCheckboxFilter extends React.Component<GridColumnMenuCheckboxFilterProps, GridColumnMenuFilterStateProps> {
    /**
     * @hidden
     */
    static defaultProps: {
        uniqueData: boolean;
    };
    /**
     * @hidden
     */
    compositeFilterIndex: number;
    constructor(props: GridColumnMenuCheckboxFilterProps);
    /**
     * @hidden
     */
    componentDidUpdate(): void;
    /**
     * @hidden
     */
    defaultFilter: () => any;
    /**
     * @hidden
     */
    isControlled: () => boolean;
    /**
     * @hidden
     */
    parseData: (originalData: any, isUnique: any) => any;
    /**
     * @hidden
     */
    getFilterIndex: () => any;
    /**
     * @hidden
     */
    onFilterExpand: () => void;
    /**
     * @hidden
     */
    handleSearchChange: (e: any) => void;
    /**
     * @hidden
     */
    handleClear: () => void;
    /**
     * @hidden
     */
    clear: (e: React.SyntheticEvent<any>) => void;
    /**
     * @hidden
     */
    submit: (e: React.SyntheticEvent<any>) => void;
    /**
     * @hidden
     */
    handleCheckBoxChange: (e: any, value: any) => void;
    /**
     * @hidden
     */
    isAllSelected: () => boolean;
    /**
     * @hidden
     */
    render(): JSX.Element;
}
