import FieldsService from './FieldsService';
/**
 * @hidden
 */
export declare function hasChildren(item: any, childrenField: string): boolean;
/**
 * @hidden
 */
export declare function isItemExpandedAndWithChildren(item: any, fieldsSvc: FieldsService): boolean | undefined;
/**
 * @hidden
 */
export declare function resolveItemId(publicId: any, idField: string, items: any[], childrenField: string): string | undefined;
/**
 * @hidden
 */
export declare function resolveItemsIds(publicIds: any[], idField: string, items: any[], childrenField: string): string[];
/**
 * @hidden
 */
export declare function updateItem(items: any[], itemId: string, update: (item: any) => void, cloneField: string, childrenField: string): any[];
/**
 * @hidden
 */
export declare function isEnabledAndAllParentsEnabled(itemId: string, items: any, fieldsSvc: FieldsService): any;
/**
 * @hidden
 */
export declare function getAllDirectIndirectChildrenIds(item: any, itemId: string, childrenField: string, idField: string | undefined): any[];
/**
 * @hidden
 */
export declare function areAllDirectChildrenChecked(item: any, itemId: any, idField: string | undefined, childrenField: string, check: string[]): boolean;
/**
 * @hidden
 */
export declare function getAllParents(itemId: string, childrenField: string, items: any[]): any[];
/**
 * @hidden
 */
export declare function removeItem(itemId: string, childrenField: string, items: any[]): any[];
/**
 * @hidden
 */
export declare function addItem(item: any, operation: 'before' | 'after' | 'child', childrenField: string, targetItemId: string, items: any[]): any[];
