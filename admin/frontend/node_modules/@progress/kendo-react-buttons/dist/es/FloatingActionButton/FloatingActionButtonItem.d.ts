import * as React from 'react';
/**
 * The FloatingActionButtonItemHandle ref.
 */
export interface FloatingActionButtonItemHandle {
    /**
     * The FloatingActionButtonItemHandle element.
     */
    element: HTMLLIElement | null;
    /**
     * Focus the FloatingActionButtonItem.
     */
    focus: () => void;
}
/**
 * Represents the props of the [KendoReact FloatingActionButtonItem component]({% slug overview_floatingactionbutton %}).
 */
export interface FloatingActionButtonItemProps {
    /**
     * Sets additional CSS styles to the FloatingActionButtonItem.
     */
    style?: React.CSSProperties;
    /**
     * Specifies a list of CSS classes that will be added to the FloatingActionButtonItem.
     */
    className?: string;
    /**
     * Represents the children that are passed to the FloatingActionButtonItem.
     */
    children?: any;
    /**
     * Specifies if the Floating Action Button Item is disabled [see example]({% slug disabled_floatingactionbuttonitem %}).
     * Defaults to `false`.
     */
    disabled?: boolean;
    /**
     * Sets the index of the Floating Action Button Item that is used to identify it.
     */
    index?: number;
    /**
     * Defines the icon rendered in the FloatingActionButtonItem
     * [see example]({% slug databinding_floatingactionbutton %}).
     */
    icon?: string;
    /**
     * Specifies the text of the FloatingActionButtonItem
     * [see example]({% slug databinding_floatingactionbutton %}).
     */
    text?: string;
    /**
     * Sets the `tabIndex` property of the FloatingActionButtonItem..
     * Defaults to `0`.
     */
    tabIndex?: number;
    /**
     * Sets a custom property. Contained in the FloatingActionButtonItem props that are
     * returned from the `onItemClick` FloatingActionButton event
     * [see example]({% slug customization_floatingactionbutton %}#toc-items-rendering).
     */
    [customProp: string]: any;
    /**
     * @hidden
     */
    id?: string;
    /**
     * @hidden
     */
    dataItem?: any;
    /**
     * @hidden
     */
    item?: any;
    /**
     * @hidden
     */
    focused?: boolean;
    /**
     * @hidden
     */
    onDown?: (event: any) => void;
    /**
     * @hidden
     */
    onClick?: (event: any, index: number) => void;
}
/**
 * Represents the [KendoReact FloatingActionButtonItem component]({% slug overview_floatingactionbutton %}).
 *
 * @example
 * ```jsx
 *
 * const App = () => {
 *   return (
 *       <FloatingActionButton items={[{icon: 'pencil', text: 'Edit'}, {icon: 'close', text: 'Remove'}] icon: 'plus'} />
 *   );
 * };
 *    ReactDOM.render(<App />, document.querySelector('my-app'));
 * ```
 */
export declare const FloatingActionButtonItem: React.ForwardRefExoticComponent<Pick<FloatingActionButtonItemProps, keyof FloatingActionButtonItemProps> & React.RefAttributes<FloatingActionButtonItemHandle | null>>;
