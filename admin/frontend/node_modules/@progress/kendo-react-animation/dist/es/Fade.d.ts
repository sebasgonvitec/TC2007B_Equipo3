import * as React from 'react';
import * as PropTypes from 'prop-types';
import { AnimationInterface } from './AnimationInterface';
/**
 * Represent the props of the [KendoReact Fade Animation component]({% slug animationtypes_animation %}#toc-fade).
 *
 * {% meta %}
 * {% variant title:Hooks %}
 * {% embed_file props/fade/func/main.tsx preview %}
 * {% embed_file props/fade/func/styles.css %}
 * {% endvariant %}
 * {% variant title:Classes %}
 * {% embed_file props/fade/class/main.tsx preview %}
 * {% embed_file props/fade/class/styles.css %}
 * {% endvariant %}
 * {% endmeta %}
 *
 */
export interface FadeProps extends AnimationInterface {
    /**
     * After the element reaches its exit state, it is no longer available in the DOM. If a DOM operation is required, access it trough the `childFactory` function.
     */
    childFactory?: any;
    /**
     * Specifies CSS class names which are set to the Animation.
     */
    className?: string;
    /**
     * Specifies the node type of the parent Animation. Defaults to `div`.
     */
    component?: string;
    /**
     * Specifies the id of the Animation.
     */
    id?: string;
    /**
     * Specifies the style of the parent Animation.
     */
    style?: any;
}
export declare class Fade extends React.Component<FadeProps, {}> {
    /**
     * @hidden
     */
    static propTypes: {
        children: PropTypes.Requireable<NonNullable<PropTypes.ReactNodeLike>>;
        childFactory: PropTypes.Requireable<any>;
        className: PropTypes.Requireable<string>;
        component: PropTypes.Requireable<string>;
        id: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<any>;
    };
    /**
     * @hidden
     */
    static defaultProps: {
        appear: boolean;
        enter: boolean;
        exit: boolean;
        transitionEnterDuration: number;
        transitionExitDuration: number;
    };
    /**
     * @hidden
     */
    render(): JSX.Element;
}
