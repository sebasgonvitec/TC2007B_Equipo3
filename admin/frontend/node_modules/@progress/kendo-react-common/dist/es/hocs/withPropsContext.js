var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { usePropsContext } from '../hooks/usePropsContext';
/** @hidden */
export var createPropsContext = function () { return React.createContext(function (props) { return props; }); };
/** @hidden */
export var withPropsContext = function (context, Component
// eslint-disable-next-line react/display-name
) { return React.forwardRef(function (props, ref) {
    var contextProps = usePropsContext(context, props);
    return (React.createElement(Component, __assign({}, contextProps, { ref: ref })));
}); };
