import * as React from 'react';
import { BaseEvent, CustomComponent } from '@progress/kendo-react-common';
export interface TextBoxChangeEvent extends BaseEvent<TextBoxHandle> {
    syntheticEvent: React.ChangeEvent<HTMLInputElement>;
    value: React.InputHTMLAttributes<HTMLInputElement>['value'];
}
/**
 * Represents the properties of the KendoReact [TextBox]({% slug api_inputs_textbox %}) component
 */
export interface TextBoxProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'prefix' | 'onChange'> {
    /**
     * Configures the `size` of the TextBox.
     *
     * The available options are:
     * - small
     * - medium
     * - large
     * - null&mdash;Does not set a size `className`.
     *
     * @default `medium`
     */
    size?: null | 'small' | 'medium' | 'large';
    /**
     * Configures the `roundness` of the TextBox.
     *
     * The available options are:
     * - small
     * - medium
     * - large
     * - full
     * - null&mdash;Does not set a rounded `className`.
     *
     * @default `medium`
     */
    rounded?: null | 'small' | 'medium' | 'large' | 'full';
    /**
     * Configures the `fillMode` of the TextBox.
     *
     * The available options are:
     * - solid
     * - outline
     * - flat
     * - null&mdash;Does not set a fillMode `className`.
     *
     * @default `solid`
     */
    fillMode?: null | 'solid' | 'flat' | 'outline';
    /**
     * The `onChange` callback of the `input` element inside the TextBox.
     */
    onChange?: (event: TextBoxChangeEvent) => void;
    /**
     * Indicates if the component is in `valid` state
     */
    valid?: boolean;
    prefix?: CustomComponent<any>;
    suffix?: CustomComponent<any>;
}
/**
 * Represent the `ref` of the TextBox component.
 */
export declare type TextBoxHandle = {
    element: HTMLInputElement | null;
    value: TextBoxProps['value'];
};
/**
 * Represents the [KendoReact TextBox component]({% slug overview_textbox %}).
 */
export declare const TextBox: React.ForwardRefExoticComponent<TextBoxProps & React.RefAttributes<TextBoxHandle | null>>;
