import * as React from 'react';
import { TextAreaProps } from './interfaces/TextAreaProps';
/**
 * @hidden
 */
export interface TextAreaHandle {
    element: React.RefObject<HTMLTextAreaElement | null>;
    focus: any;
    name?: string | null;
    value?: string;
}
/**
 * Represents the PropsContext of the `TextArea` component.
 * Used for global configuration of all `TextArea` instances.
 *
 * For more information, refer to the [Inputs Props Context]({% slug props-context_inputs %}) article.
 */
export declare const TextAreaPropsContext: React.Context<(p: TextAreaProps) => TextAreaProps>;
/**
 * Represents the [KendoReact TextArea component]({% slug overview_textarea %}).
 *
 *
 * Accepts properties of type [TextAreaProps]({% slug api_inputs_textareaprops %}).
 * Obtaining the `ref` returns an object of type [TextAreaHandle]({% slug api_inputs_textareahandle %}).
 *
 * @example
 * ```jsx
 * class App extends React.Component {
 *     render() {
 *         return <TextArea />;
 *     }
 * }
 * ReactDOM.render(<App />, document.querySelector('my-app'));
 * ```
 */
export declare const TextArea: React.ForwardRefExoticComponent<TextAreaProps & React.RefAttributes<TextAreaHandle | null>>;
